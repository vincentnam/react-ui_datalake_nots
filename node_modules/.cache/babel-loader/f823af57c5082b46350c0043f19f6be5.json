{"ast":null,"code":"var _jsxFileName = \"/app/src/components/d3component_histogram.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from \"d3\";\nimport * as axios from \"axios\";\nimport log from \"d3-scale/src/log\";\nexport default function D3Histo(props) {\n  const d3Container = useRef(null); // const [books, setBooks] = useState(initialBooks)\n\n  useEffect(() => {\n    if (props.data && d3Container.current) {\n      // const d3 = require(\"d3\")\n      axios.get(\"http://localhost:5000/sensors_data\").then(function (response) {\n        console.log(response.data);\n        const width = 600;\n        const height = 300;\n        var data = response.data;\n        var payload = response.data;\n        var values = [];\n        var value_units = [];\n        var date = [];\n        var size = 0;\n\n        for (var device in data) {\n          // console.log(device)\n          for (var uri in data[device]) {\n            // console.log(uri)\n            for (var sample in data[device][uri]) {\n              // console.log(sample)\n              // console.log(data[device][uri][sample])\n              size = values.push(data[device][uri][sample]);\n              value_units.push(data[device][uri][sample][1]);\n              date.push(data[device][uri][sample][2]);\n            }\n          }\n        } //\n        // \"Mon, 01 Jan 2018 00:01:27 GMT\"\n        // \"2018-01-01T00:00:00\"\n        // const data = [5.1,4.9,8.6,6.2,5.1,7.1,6.7,6.1,5,5,5.2,7.9,11.1,5.9,5.5,5.6,6.5,7.7,5.7,6.7,5.7,4.8,5.6,9.5,5.7,4.7,6.3,5.7,6.6,5.5,5.4,9.3,7.6,6.3,5.6,5.9,5.5,5.2,6,6.4,4.9,5,10.3,7.2,4.9,6.9,6.1,5.1,6.5,8.6,5.6,5.2,10.9,6.7,6.4,5.7,5.3,5,4.2,7.3,6.4,5.1,5.5,7.2,8.3,13.9,7,1.9,2.2,5,14.1,5.6,3.2,8.1,4.9,5.9,7.3,3.6,6.9,4.4,4.8,21.7,9.2,7.4,13.6,6.9,16.5,5.7,9.4,3,3,8.7,5.4,5.4,5.8,16.4,11.8,6.5,6.4,7.6,7.3,7.7,6.6,4.9,7,8.5,5.4,5.9,13,5,24.4,3.2,6.3,4.1,2.7,3.3,5.9,5.1,2.8,6,4.5,5,5.7,4.4,5.7,5.9,3.1,3.7,4.4,3.9,5,5.1,5.7,3.7,3.9,3.9,4,3.2,4,3.7,3.6,3.4,5,5.3,5.9,5.9,4.8,6.2,4.5,4.5,4.9,5.1,4.4,3.2,3,3.8,4.3,7.1,4.5,4.6,3.7,3.6,5.6,4.4,5.5,3.8,4.1,4.7,4.7,3.7,3.5,4.6,5,3,3.7,4.3,3.5,4.8,5.2,4.8,5.6,6.4,2.6,4.8,5.3,4.4,4.6,7.3,5.7,6.6,5.7,10,4.7,7.3,5.1,8.7,7.9,5.1,26.4,4.9,9.7,8.9,6.3,6.1,5.3,8.2,3.5,5.4,5,9.2,6.6,5.2,5.6,4,4.8,4.3,4.7,7.1,6.9,5.7,6.2,6.2,5,3.5,7.7,4.5,3.2,4.8,4,5.7,6.8,6.6,7.1,5.7,4.1,7.9,7.9,7.4,5.9,10.6,6.1,5.7,5.5,8,3.6,4.3,3.2,3.1,1.8,3.1,2.9,3.1,2.4,2.7,3.3,4.9,4.8,3.6,3,4.7,3.2,4.1,2.8,2.5,2.6,3.9,5.1,3.3,2.6,2.3,2.1,2,6.2,2.3,3.1,2.1,1.8,2.6,2.9,2.9,5,2.5,3.3,5.3,1.7,3.6,4.5,3.9,3.5,4.6,3.2,2.7,2.3,2.7,3.5,4.9,5.1,5.1,2.6,5.9,2.4,2.4,2.2,2.1,3.7,2.1,3.5,2.2,5.2,6,4.8,4.8,6.1,5.4,4.8,5.8,5.1,4.5,3.7,6.5,4.4,4.7,4.6,4.2,5.2,4.6,5.9,5.3,6.8,4.4,5.3,4.8,6.1,5.3,5.1,5,5.4,4.1,6.3,5.1,6.9,4.3,4.4,7.2,11.5,6,6.9,4.5,5.6,6.6,5.4,5.3,3.8,4.7,4.7,4.7,5.2,5.4,5.3,4.6,5.9,5,5.6,3.1,4.6,3.9,5.8,4.3,5,5.1,5.1,4.3,5.8,6,3.6,6,4.6,4.5,4.2,6.7,5.1,5.5,4.6,5,4.1,4.1,5,6.9,4.6,5.2,8.3,7.2,4.8,4.6,5,8.1,6.1,5.7,7.6,6.6,4.8,4.8,5.6,7.5,5.2,6,5.7,4.7,5.9,4.8,5.8,5,8.6,6.1,4.1,5.4,9.6,6.4,6,4.4,5.6,5.3,4.8,5.2,4.9,5.5,5.9,5.1,4.5,6.5,5.2,7,5.5,6.8,5.3,6.7,4.5,4.7,6.2,7.4,4.8,5,4.7,5.9,4.1,5.5,5.2,5.4,6.3,5,5.3,5.4,5.9,4.6,5,4.4,8.9,5.6,4.7,5.3,5.8,5.4,5.3,7.3,4.1,4.7,6.3,7,7.1,6,4.6,6.4,5.3,6.4,4.8,5.7,5.7,5.6,5.2,5,7.2,5.5,7.6,4.7,6.9,6.8,5.5,6.3,4.9,7.1,4.8,6.6,6.6,5.8,4,4.5,4.5,6.4,4.8,5.3,5.1,5.7,5.6,6.8,7.7,5.4,8.6,6.5,5.5,6.4,6.9,7.5,6.5,5.9,5.8,7.4,6.6,6.6,5.4,7,7.7,6,6.3,5.6,7.3,6.3,7.3,5,6.4,8.2,4.5,6.2,5.3,4.7,5.4,7,6.3,6.6,8.6,8.5,4.4,5.7,6.8,6.7,6,5.8,4.1,3,3.4,3.4,3.5,4.9,3.6,3.4,4.6,3.7,2.8,4.9,4.3,3.2,4.1,3.7,2.6,4.4,3.2,2.9,3.3,5.9,4.1,4.2,2.9,3.2,4.3,3,4.8,3.1,2.8,4,3.2,4.8,6.9,3.6,2.9,3.1,3.1,3.1,3.7,4.1,4.2,5.9,2,3.4,4.2,5.3,4.7,9.5,4.7,5.8,3.2,5.8,5.7,4.8,4.8,5,5.8,5.5,6.4,4.1,6,5.7,5.6,5,5,5.6,4.6,4.4,6.1,5.2,4.5,6,5.3,8,6.9,7.6,5.3,5.9,6.1,6.9,8.1,5.8,5.4,4.9,5.5,6.2,6.5,5.5,4.4,8.3,5.1,6.1,4.7,5.6,4.8,6.2,7.6,4.8,5.2,5.1,6.8,4.6,5.1,6.6,5.5,6,6.2,5.9,7.1,7.4,3.9,5.3,3.9,6.3,4.6,4.5,5.3,6.6,6.9,4.8,4.4,6.8,8.6,5.2,4.8,5.8,6,6.2,8.1,4.6,4.9,4.3,5.6,6.7,5.6,6,7.1,7.1,6.5,5.2,3.8,8.4,6.2,5.8,5.4,6.2,6.4,4.9,3.8,4.3,3.6,4.3,5.7,3.6,3.8,4.4,4.7,4.4,5,4,5.6,3.6,4.7,3.6,4.2,5.5,3.3,4,5.9,4.4,5.9,4.2,4.8,3.8,5.1,6.6,3.4,4,4.4,3.6,4.7,4.8,4.2,4,5.1,4.7,5,4.8,3.8,4.5,4,3.7,6.6,6,5.6,4.9,4.7,3.9,4.1,4.8,5.1,4.1,4.2,5.3,4.2,4.9,5.2,5.4,5.1,4.9,4.6,5.3,4.3,4.6,4.5,4.5,4.5,4,5,4.9,4,4.2,5.2,3.8,6.1,5.3,4.3,3.8,4.2,4.4,6.5,5.7,4.5,5,4.4,4.6,4.9,3.6,3.9,4,3.4,2.9,4.9,5.7,3.7,4,5.8,3.4,4.2,4.6,4.4,4.5,4.7,3.1,3,3.8,4.4,4.1,4.6,3.4,4.1,4.2,6.1,5.2,3.2,5.3,3.5,3.7,5.9,3.5,4,4.2,5,3.9,3.8,4.1,4.3,3.7,3.6,4,3,4.2,3.7,4.4,3.6,3.2,2.8,3.2,4.5,4,4.6,3.2,4.4,5.1,3,8.1,4.3,4.5,3.8,2.3,3.7,4.3,3.4,4.9,4,3,4.6,5.4,4.2,4.4,3,3.1,6.4,3.9,2.9,3.4,4.1,3.8,4,3.7,3,5.4,3.2,2.4,2.9,4.2,3.9,4.4,4.9,7.4,3.8,3.5,4.6,4.7,4.1,3.6,4.2,3.5,4.5,6.9,4.6,7.4,4.4,5,5.7,4.2,4.6,4.6,5.9,5.2,3.3,3,4.8,5.1,8.2,3.2,5.1,5.4,4.7,4.7,4.7,4.1,3.3,6.8,3.4,4.3,3.5,3.6,4.8,6.4,3,5,3.9,2.6,2.7,5.7,3.2,4,6.3,2.8,2.7,4,4.1,4.5,3.7,3.7,4.8,3.5,6.2,3.9,4.5,4,7,3.2,4.3,3.9,5.9,3.6,2.9,4.3,3.1,6.9,4.3,4.6,3,8.1,4.1,2.9,4.6,4.1,4.5,3.6,3.6,4.1,5,2.6,5.2,3.2,4.8,3.7,5.5,4.7,4.6,4,2.7,5.2,4.9,4.5,2.9,3.8,3.7,5,3.3,4.7,4.9,3.2,4.2,3.8,3.3,3.9,2.6,6.9,6.9,6.1,6.1,3.9,3.6,9,4.3,6.5,8.3,3.5,4.6,8.3,4.5,5.4,8.3,5.7,3.8,4.8,5,4.1,3.5,6.8,5,10.6,4.4,6,4.5,9.7,6.4,5.2,4.6,4,5.4,11.7,5.2,3.3,5.5,10.4,3.6,6.6,4.4,4.3,4.2,6.4,6.2,4,8.8,4.7,4.1,11.6,4.4,4.4,4.5,3.9,5.1,5.5,6.9,4.2,3.6,9.2,3.8,10.5,7.5,3.9,5.8,10.6,8.3,13.2,11.8,8.4,5.6,6.7,4.2,5.6,5.7,7.3,4.5,3.8,16.3,4.3,5.5,9,6,4.7,7.1,4.4,3.8,3.6,6,6.8,6.7,4.3,4.9,6.3,3.1,3.8,8.7,4.3,10.4,10.3,6.9,5,6.1,5.3,5.3,7.6,3.6,3.3,4.2,3.5,4.8,3.9,5,5.4,6.4,3.5,4,6.8,5.5,6.4,9.5,3,7.9,7.5,5.3,9,7.8,6.7,8,5.9,7.4,5.5,8.4,4.8,9.6,7.5,9.2,8,5.7,11.8,6.2,8.5,9.6,7.8,9.7,7.4,6.3,5.9,6.7,6.7,6.7,6.7,7.5,5.3,9.4,10.4,8.1,6.7,6.7,5.9,7.2,6.9,6.8,7.7,7.3,6.9,6,8.5,8.1,7.5,8.9,8.3,10.1,5.7,7.5,10.5,7.3,6.9,7.9,8.1,7.9,9.4,6.1,12,5.5,8.5,3.2,4.8,2.6,4,3.2,3.2,2.7,2.9,4.2,4,4.8,2.6,4.9,3.6,4.6,2.9,6.4,4,4.7,4.1,4.8,3.8,5.3,4.7,6.2,3.9,5.2,4.3,3.4,4.7,3.4,4.6,3.8,4.5,6.5,4,5.2,5.5,5.8,6.9,3.4,3.9,4.7,2.7,3.9,3.3,5.3,3.6,3.2,1.8,3.4,4,3.7,4.1,5.8,6.1,3.3,5,5,6.3,6.8,3.5,4.7,4.6,4.4,4.4,4.4,4.2,3.7,4,6,6,3.4,6.2,5.5,4.5,3.6,4.1,5,5.8,5.5,3.4,4.5,4.9,5.2,4.3,4,3.6,5.8,4.7,4.2,4.6,3.7,5.4,3.2,6.4,6,6.4,3.5,4.4,4.6,4.4,3.1,5.9,4.9,4.9,4.2,4.9,5.1,4.1,4.8,4.3,4.5,7.6,4.8,4.2,4.7,5,6.3,6.6,4.9,5.6,4.9,3,6.6,6.8,4.6,6.5,3.7,5.2,7,4.6,5.3,4.6,3.5,7.3,5.1,5.1,3.8,3.8,4.8,3.7,4,3.3,3.9,4.9,3.4,5.6,4,3.9,3.2,7.6,3.1,7.9,4.3,3.5,3.6,3,3.9,3.7,3.7,3.7,4.1,3.5,3.4,5.5,4.2,7.7,4,5.1,3.5,4.2,7.7,3.9,4.3,4.5,3.7,3.2,3.4,4.1,5.2,5.6,3.9,4,4.8,4.5,3,3.3,2.9,3.6,4.6,3,3.6,4.3,4.8,3,4.4,2.8,3.8,6.3,4,5.2,3.6,2.2,4.3,5.7,3.2,3.6,3.7,3.5,3.8,2.7,4.8,3.9,3,3.2,5.1,4,3.4,5.1,3.4,3.7,3.5,3.7,8.2,5,7.1,6.5,6.5,7.4,5.2,7.3,6.3,5.3,12.3,6.4,7.8,8.1,6.4,5.6,4.1,5.8,6.8,7.7,8,4.9,5.9,5.3,5.2,10.9,11.2,9.9,4.8,6.4,7.8,15.4,9.3,5.9,8.2,4.9,4.5,5.8,7.4,5.6,4.8,9,5.8,5.9,4.2,6.8,5.7,6.3,6.3,5.4,5.9,8,5.6,6.7,5.9,7,6.7,4.5,5.3,8.3,3.8,4.5,8,5.5,5.1,6.8,8.4,5.7,5.4,5.2,5.1,6.1,4.2,7.9,6.4,9.2,7.6,6.1,10.1,7.4,6,7,6.7,4.5,5.9,5.1,5.3,6,6,7.3,6.2,4.1,4.9,6.9,5.6,5.2,5.5,5.3,5.9,7.8,5,6.4,5.1,4.5,8.7,4.5,5,4.6,5.7,5.9,5.6,6.5,4.6,5.1,6.6,7.3,9.1,4.9,5,4.7,4.6,5.6,4.7,5.9,6.6,4,5.4,7.2,8.4,6,5.2,4.9,6.1,4.1,6.2,4.9,5.4,4.9,4.8,9,4.5,4.9,6,6.9,6.8,5,5,5.4,7.7,4.9,5.5,5.1,6.4,9.9,5.5,6,7,4.2,8.8,9.9,4.3,6.1,5.6,5.4,4.4,6.4,6.8,5.1,4.4,6.6,5.5,8.1,8.4,4.1,7.3,5.8,6.7,5.1,5.8,7.6,4.6,6.9,8,4.8,7.1,6,7.4,6.1,7.6,5.8,4.6,7.2,6.1,5.9,3.6,7.3,6.6,2.9,7.7,4.4,4.3,3.5,2.4,3.8,3.6,3.7,2.3,4,4.2,3.1,3.3,4.8,2.3,2.4,9,3.2,5.5,4.9,4.5,2.7,4.8,3.3,3.1,7.9,2.1,3.1,4.2,7.1,3.5,4.3,3.3,3.1,4.6,4.7,2.5,4.5,3,4.5,4.9,6.2,6.8,7,3.2,4.3,3.9,2.9,3.5,3.3,4.1,3,4.9,4.6,3.7,3.3,2.5,5.4,4.2,4.1,2.8,3.6,2.8,3.5,2.8,3.6,3.2,3.5,2.8,2.5,2.5,3.3,3,3.2,3.2,2.6,4.5,3.4,3,3.4,3.4,3.3,3.5,2.5,2.8,3.3,2.8,3.3,3.5,3.2,2.7,2.7,2.6,3.7,3.4,2.9,2.9,2.8,4.1,3.1,2.7,2.9,2.7,3.1,2.4,3,2.3,4.3,2.8,3,3.2,3,3.7,2.5,3,3.7,3.5,2.9,4.3,3,3.6,2.4,2.5,2.8,2.5,3.5,2.7,3.2,3.3,2.6,3.1,3.1,3.2,3.8,3.1,3.4,3.3,2.6,2.7,2.8,3.2,4.6,2.9,3.2,3.4,3.7,2.7,2.9,5.8,6,5.3,4.4,4.7,5.1,5.5,5.9,5.3,7.3,8.6,7.5,6,5.8,4.9,4.6,6,2.6,2.8,2.9,3.5,2.4,3.2,2.6,3.1,2.7,2.5,7.1,4.7,5,6,5.7,7.9,6.6,5.6,5.2,4.1,4.9,4.9,4.8,4.2,5.4,6.8,6.8,4.4,5,5.6,5.1,6.2,6.9,6.9,9.1,5.6,5.4,5,7.1,7.2,6.6,6.4,7.3,5.4,9.8,6,4.5,10,9.8,8,6.4,7,7.3,6.1,7.1,9.4,8.1,5.5,7.8,8,8.3,9.3,4.5,7.6,4,4.9,7.8,5,5.2,4.4,5.1,5.2,4.4,5.1,3.3,4.6,4.9,4,4.6,4.1,4.8,5.2,3.8,4.5,2.9,4.4,5.1,5.9,5.4,4.2,4.6,4.6,5.2,3.8,4.9,5.2,4.3,4.2,3.7,4.2,5.2,5.7,4.3,3.9,5,4.1,5.9,4.1,5.8,3.5,4.2,4.7,4.6,3.8,5,4.3,4.1,4.5,3.7,4.3,4.1,3.8,4.5,4.2,4.1,3.7,4.8,4.5,5.1,5.9,4.5,4.8,5.6,6.4,6.7,5.7,3.9,5.1,4.6,5.3,5.3,4.7,5.5,4.9,4.3,5.4,6.5,5.1,5.6,6.1,5.1,6.3,4.6,4.2,4.9,4.6,5.4,4.5,8.5,4.9,5.1,5.3,5.2,7.1,4.4,5,5.3,7.8,5.8,4.4,4.3,6.5,6.5,6.4,4.7,5.1,4.5,5.1,5.7,5.4,4.6,4.6,5.1,4.9,6.8,4.7,6,5.2,5,6.8,4.7,7.3,5.4,4.5,5.1,6.2,5.2,6.3,5.4,5.7,4.9,4.8,6.9,7.3,5.5,5.5,6.6,5.6,8.9,4.7,4.9,4.8,4.9,4.8,6.2,4.4,7.3,4.2,7,6.9,4.7,5.6,4.7,8.1,4.4,5.1,2.3,3.2,3.1,2.5,3.2,1.8,3.8,2.3,2,1.9,1.8,2,2.2,2.8,3.1,2.5,2.4,2.3,2.1,2.3,2.9,2.6,2,2.9,4.1,2.4,3.1,3.1,4.5,2.9,2.9,2.9,5.3,4.5,3,2.5,1.9,3.5,2.7,14.2,1.6,3.7,5.3,2.3,3.3,1.7,2.1,2,2.7,3.6,3.5,2.7,3.7,6.8,4.6,4.3,5.3,6,3.5,6.3,5,4.2,6,4.1,4.7,4.1,5.4,6,6.2,5.5,5.5,3.7,4.3,3.4,4.6,3.9,3.9,3.9,4,6.4,4.4,4.2,5.8,4.2,3.5,4.9,6.4,4.2,5.5,4.5,3.3,5,7,7.4,4.1,4.8,6.1,4.1,3.9,5.9,4.9,3.5,5.8,4.7,4.3,7.6,3,4,9.1,4.6,6.8,4.4,5.3,7.3,4.6,4.2,5.5,4.2,6.8,4.5,4.3,3.2,4.9,4.8,4.1,7,4.4,3.7,4.9,4.7,6,5,3.5,3.7,5.9,3.9,6.4,3.6,4.1,4,3.4,5.8,3.6,7.1,3.2,7.7,3.7,4.3,5.6,4.3,5.4,5.6,8.3,2.7,4,7.5,4.8,5.2,4.9,6.3,4.9,5.2,4.1,3.7,4.5,5.7,5.2,3.1,7.9,3.6,4.3,8.8,7.5,4.9,8,6.5,6.7,3.6,5.6,9.7,7.4,5.5,4.3,3.3,4.3,7.7,9.5,4.3,5.1,5.5,4.3,6,4,6.5,6.1,4.5,7.4,6.1,5.3,7.1,3.9,6.5,4.2,5,7.7,5.4,5.6,7.3,6.5,10.4,3.5,4.5,5.2,5.2,5,7.2,3.3,6.4,6.7,5,5.2,5.1,7.1,7.3,6.9,7,5.1,7.3,7.1,6.1,5.9,4,6.8,6.6,7.4,7.2,5.7,6.2,5.9,6.7,6.1,5.9,5.8,5,6,4.3,5.2,5.9,6.3,5,5.9,5,4.9,5.4,4.5,5.9,8,6.8,5.8,5.6,5.7,6.5,5.2,5.7,7.7,8.2,6.7,4.8,4.6,7.2,7.5,7.3,6.2,6.7,4.7,5.3,5.6,6.7,7.1,8.5,8.5,5.7,6.3,8.1,7.1,8.3,7.3,5.8,6.4,4.8,7,5.1,6.3,6.9,7,7.2,6.8,6,6.9,4.7,4.9,5.9,6.6,5.1,7.7,6.8,7.8,6.7,5.1,7.5,7,5.4,7.4,5.4,8,5.9,6.6,5.6,6.6,6.2,5.2,5,5.3,4.8,6.3,5,6.1,5.6,9.1,5.2,11.4,8,5.1,5,7.4,4.5,6.6,8.4,5.7,7.1,5.8,6.8,7.1,4.9,6.1,7.7,5.8,6.6,4.7,5.8,6.2,5.4,4.7,5.8,6,5.6,8.2,4.5,5.8,8.6,9.1,4.8,5.5,11.3,5.6,5.4,4.8,5.3,6.5,6.5,7.9,5.2,1.9,2.3,4,2.4,2.5,2.4,2.5,9.8,2.9,2.5,3,2.9,2.7,2.6,5.5,3.1,1.9,3.6,3.2,14.1,2.2,2.1,3.8,2.5,2.5,2.6,2.1,2.4,1.9,3.2,2.1,2,2,2.8,2.8,2.4,2.4,2.1,3,2.9,1.8,5,2.1,3.6,2.8,2.7,3.8,2.4,2.2,3.6,13.2,2.6,2.8,2.3,3.3,2.5,2.6,2,1.9,6.8,1.9,2.4,2.9,4.3,2.3,5.6,5.1,5.3,7.4,6.6,4.5,4.7,6.7,4.9,7.1,5.9,4,5.7,6.4,6.4,6,4.9,5.2,5.9,3.8,7.3,5.8,4.4,6.1,5.3,6,5.7,6.2,4.3,5.4,5.8,6.6,5.3,5,8,6.2,6.2,5.5,6.5,7,6,4.6,7.7,6.2,7.3,5.4,4.9,4.3,7.3,7.8,5.9,5.8,4.4,4.8,5.8,7.4,4.5,5.3,6.7,4.8,4.2,7.2,5.5,5.5,4.2,6.6,7.5,5.6,6.2,5.7,5.8,5.2,7.5,5.8,4.4,4,7.4,6.1,4.2,5.8,4.6,6.8,5.5,4.1,5.9,4.9,6.9,5.9,5.8,4.8,5.1,6.2,7.3,5.4,3.7,4,4.8,4.9,6.6,5.9,4.5,3.5,5.7,5.9,4.6,4.3,4.1,3.5,8.5,4.8,4.1,3.3,3.4,4.7,5.4,5.7,3.9,4.3,4.8,12.5,4.8,5.2,3.8,4.5,5.5,4.6,7.6,7.8,3.5,8.2,3.5,6.8,5.5,3.5,4.5,6,3.9,6.4,3.8,3.6,5.3,4.2,4.6,3.2,4.2,4.9,5,9.1,6.7,5.1,4.1,2.5,4.2,6,3.5,4.3,3.7,6,5.7,7.4,5.3,12.1,5.7,6.8,5.2,4.1,5.4,4.7,4.6,4.1,4.1,4.7,5.5,4.6,5.7,5.5,7.2,5.4,3.7,5.9,3.8,3.1,4.3,5.7,4.6,7.3,4,6.8,7.6,4,6.4,8.2,5.3,3.2,4.2,6.8,5.8,6.7,2.1,5.1,3.7,3.8,5.3,8.4,4.8,5.1,5,4.5,5,6.1,7,4.5,6.7,3.3,5.2,5.3,8.8,2.9,7.6,9.9,11.3,4.7,6.2,5.3,4,3.6,5.4,2.9,3.9,3.9,3.6,6.6,7.9,5.3,5.4,7.1,4.6,5.7,4.7,4.2,7.3,8.5,6.2,5.1,5.5,4.3,4.4,3.7,4.5,5.1,4.4,2.2,4.8,7.7,4.8,3.7,7.6,11.4,4.8,5,4.6,5.6,4.6,7.3,5.1,5.5,3.2,13.1,3.9,5.5,4.6,7.9,5.1,5.9,5.4,3.4,7.5,5.9,7.5,4.3,2.8,5.9,7.1,3.6,11.9,4.5,3.2,7.7,5.3,6.6,6.1,7.4,4.9,5.5,3.9,4.8,6.4,9.8,9.6,6.9,7.8,3.9,5.9,6.3,4,6.5,3.4,5.1,5.1,14.1,5.9,3.8,4.9,8.5,4.7,4.2,4,4.1,5.5,4,7.2,4.7,3.4,6.7,8.2,7.3,5,5.6,6.7,4.6,5.7,6.2,6.4,5.8,5.6,5.2,5.4,4.4,4.6,5.4,13.3,3.6,4.2,8.5,5.1,5.8,5,4.8,11.2,17.3,6.1,3.3,3,6.1,3.4,3.1,8.6,5.9,5.3,3.5,4.6,3.4,2.8,3.2,2.8,4.8,2.2,3.2,7.3,4,4.2,2.9,3.9,9.8,3.1,3,3.5,5.3,3.7,3.1,4,4.2,2.7,5.2,3.2,3.7,3.7,2.9,4.5,4,3.1,3.3,3.1,4.3,3.6,4.9,4.3,4.6,4.7,2.6,3.6,3.6,4.1,6.4,3.5,5.9,10.9,5.1,4.5,4.3,5.9,4.4,5.2,3.8,3.3,4.4,3.8,4.6,10,4.8,4.7,3.2,3.4,4.4,3.4,4.3,3.4,6.9,3.6,3.6,5.2,3.2,5.1,6.2,3.5,3.9,5.4,3,4.4,3.8,4.2,4.1,3.7,4.4,6.9,3.2,3.7,4.6,3.1,3.8,5.6,3.7,4.5,3.5,3.3,5,4.4,4,3.9,4.5,4.5,4.9,3.6,5.6,4.9,3.6,10,3.5,3.3,3.6,4.3,3.6,6.5,4.6,3.6,5.6,3.8,4.1,4,5.6,5.9,8.1,3.9,4.6,4.2,8.7,7,4,2.9,5.2,5.1,3.5,4.4,4.5,5.8,6.6,6.4,3.1,2.7,5.9,4.7,5.1,5.7,5.2,6.5,7.4,5.5,3.5,3.5,6.8,5.1,5.4,7.2,7.4,3.6,6.2,6.7,4.7,4.4,4,3.9,4.7,4,4.1,5.9,3.9,4.8,4.7,6.5,5.1,7.6,6.6,5.9,7.6,6.6,9.8,6.5,5.3,6.6,8.7,6,7.2,3.9,5.9,5.8,6.5,8.1,4.1,8.3,6.1,7.7,8.9,6.5,3.9,6.7,6.7,4.3,6.3,7.9,5.9,8.4,5.6,6.3,5.5,7.3,5.8,4,8.5,6.9,6.5,4.8,8.5,9.1,4.9,6.8,6.8,6.1,4.5,4.1,6.5,5.3,5.4,5.9,3.4,5.2,7.1,7.4,10,13.1,6,7,7,6.7,6,11.7,4.5,4.5,4.5,8.5,5.3,3.5,7.5,5.1,5.2,4.6,6.3,5.3,5.9,8.5,5.5,5.2,4.8,8.1,7,6.3,8.2,8.1,8.1,5.7,9.4,5.6,5.1,3.9,5.8,3.6,4.2,4.9,3.4,3.6,3.2,3.3,4.3,2.8,3.7,3.4,5.2,3.8,3.4,5.5,3.6,6.2,3.7,3.1,3.9,3,7,3.7,3.9,4,4.8,3.1,3.7,2.9,5.4,4.3,4.3,3.4,5.2,4.7,8.6,5.5,3.5,3.9,4.3,3.5,3.4,3.2,3.8,3.8,3.5,3.8,5.3,3.4,4.3,4.5,3.5,3.1,5.6,3.9,3.3,3.5,3.4,3.1,4.5,4,4.6,3.4,3.6,3.7,4.6,3.7,4.7,3.3,4.4,6.8,4.1,6,4,6.6,3.3,4.3,4.4,4,3.8,6.8,3.3,3.7,4.6,4,5.4,5.7,2,5.3,4.5,4.9,15.7,14.5,14.9,14.5,15.1,13,13.7,18.7,15,14.1,9.2,12.9,10.7,12.8,12.4,8.8,9.9,11.2,13.4,16.9,10.6,19.5,13.7,12.6,3.8,8.5,13.8,15.4,17.9,17.3,18.1,6.3,9.2,14.1,12.7,14.2,14.3,12.5,15.8,13.4,18.8,17.8,13.7,14.7,12.7,15,12.2,13.7,17.7,14.5,15.6,14.3,12.8,13.6,15.4,20.6,16.9,13.8,16.1,13.3,11.5,16.5,23.4,15.4,8.2,13.2,18.1,20.6,8.9,9.1,7.6,15.3,12,14.3,11.3,19.6,16.6,18]\n\n\n        const svg = d3.select(d3Container.current).append(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n        const margin = {\n          top: 20,\n          right: 20,\n          bottom: 30,\n          left: 40\n        };\n        const bins = d3.bin().thresholds(40)(values); // Changer pour un dictionnaire !\n\n        var date_deb = new Date(date[0] * 1000);\n        var date_fin = new Date(date[date.length - 1] * 1000);\n        const x = d3.scaleTime().domain([date_deb, date_fin]).nice().range([margin.left, width - margin.right]);\n        console.log(date_fin);\n        console.log(date_deb);\n        const y = d3.scaleLinear().domain([Math.min(...values) - 1, Math.max(...values) + 1]).nice().range([height - margin.bottom, margin.top]);\n\n        var xAxis = g => g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x)).call(g => g.append(\"text\").attr(\"x\", width - margin.right).attr(\"y\", -4).attr(\"fill\", \"currentColor\").attr(\"font-weight\", \"bold\").attr(\"text-anchor\", \"end\"));\n\n        var yAxis = g => g.attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisLeft(y)).call(g => g.select(\".domain\").remove()).call(g => g.select(\".tick:last-of-type text\").clone().attr(\"x\", 4).attr(\"text-anchor\", \"start\").attr(\"font-weight\", \"bold\").text(data.y)); // // invalidation.then(() => simulation.stop());\n        //\n\n\n        svg.append(\"g\").attr(\"fill\", \"steelblue\").selectAll(\"rect\").data(values).join(\"rect\").attr(\"x\", d => x(d[2])).attr(\"width\", d => 1).attr(\"y\", d => 3).attr(\"height\", d => 1); //\n\n        svg.append(\"g\").call(xAxis);\n        svg.append(\"g\").call(yAxis);\n        svg.exit().remove();\n      });\n    }\n  },\n  /*\n      useEffect has a dependency array (below). It's a list of dependency\n      variables for this useEffect block. The block will run after mount\n      and whenever any of these variables change. We still have to check\n      if the variables are valid, but we do not have to compare old props\n      to next props to decide whether to rerender.\n  */\n  [props.data, d3Container.current]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d3_histogram\",\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  });\n}","map":{"version":3,"sources":["/app/src/components/d3component_histogram.js"],"names":["React","useEffect","useRef","useState","d3","axios","log","D3Histo","props","d3Container","data","current","get","then","response","console","width","height","payload","values","value_units","date","size","device","uri","sample","push","svg","select","append","attr","margin","top","right","bottom","left","bins","bin","thresholds","date_deb","Date","date_fin","length","x","scaleTime","domain","nice","range","y","scaleLinear","Math","min","max","xAxis","g","call","axisBottom","yAxis","axisLeft","remove","clone","text","selectAll","join","d","exit"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from \"d3\";\nimport * as axios from \"axios\";\nimport log from \"d3-scale/src/log\";\n\n\n\n\n\n\n\n\nexport default function D3Histo(props){\n\n    const d3Container = useRef(null);\n\n    // const [books, setBooks] = useState(initialBooks)\n\n    useEffect(\n        () => {\n            if (props.data && d3Container.current) {\n                // const d3 = require(\"d3\")\n\n                axios.get(\"http://localhost:5000/sensors_data\").then(function (response) {\n                    console.log(response.data)\n                    const width = 600;\n                    const height=300;\n                    var data = response.data\n                    var payload = response.data\n                    var values = []\n                    var value_units = []\n                    var date = []\n                    var size = 0\n                    for (var device in data){\n                        // console.log(device)\n                        for (var uri in data[device]){\n                            // console.log(uri)\n                            for (var sample in data[device][uri]){\n                                // console.log(sample)\n                                // console.log(data[device][uri][sample])\n                                size = values.push(data[device][uri][sample])\n                                value_units.push(data[device][uri][sample][1])\n                                date.push(data[device][uri][sample][2])\n                            }\n                        }\n                    }\n                    //\n                    // \"Mon, 01 Jan 2018 00:01:27 GMT\"\n                    // \"2018-01-01T00:00:00\"\n                    // const data = [5.1,4.9,8.6,6.2,5.1,7.1,6.7,6.1,5,5,5.2,7.9,11.1,5.9,5.5,5.6,6.5,7.7,5.7,6.7,5.7,4.8,5.6,9.5,5.7,4.7,6.3,5.7,6.6,5.5,5.4,9.3,7.6,6.3,5.6,5.9,5.5,5.2,6,6.4,4.9,5,10.3,7.2,4.9,6.9,6.1,5.1,6.5,8.6,5.6,5.2,10.9,6.7,6.4,5.7,5.3,5,4.2,7.3,6.4,5.1,5.5,7.2,8.3,13.9,7,1.9,2.2,5,14.1,5.6,3.2,8.1,4.9,5.9,7.3,3.6,6.9,4.4,4.8,21.7,9.2,7.4,13.6,6.9,16.5,5.7,9.4,3,3,8.7,5.4,5.4,5.8,16.4,11.8,6.5,6.4,7.6,7.3,7.7,6.6,4.9,7,8.5,5.4,5.9,13,5,24.4,3.2,6.3,4.1,2.7,3.3,5.9,5.1,2.8,6,4.5,5,5.7,4.4,5.7,5.9,3.1,3.7,4.4,3.9,5,5.1,5.7,3.7,3.9,3.9,4,3.2,4,3.7,3.6,3.4,5,5.3,5.9,5.9,4.8,6.2,4.5,4.5,4.9,5.1,4.4,3.2,3,3.8,4.3,7.1,4.5,4.6,3.7,3.6,5.6,4.4,5.5,3.8,4.1,4.7,4.7,3.7,3.5,4.6,5,3,3.7,4.3,3.5,4.8,5.2,4.8,5.6,6.4,2.6,4.8,5.3,4.4,4.6,7.3,5.7,6.6,5.7,10,4.7,7.3,5.1,8.7,7.9,5.1,26.4,4.9,9.7,8.9,6.3,6.1,5.3,8.2,3.5,5.4,5,9.2,6.6,5.2,5.6,4,4.8,4.3,4.7,7.1,6.9,5.7,6.2,6.2,5,3.5,7.7,4.5,3.2,4.8,4,5.7,6.8,6.6,7.1,5.7,4.1,7.9,7.9,7.4,5.9,10.6,6.1,5.7,5.5,8,3.6,4.3,3.2,3.1,1.8,3.1,2.9,3.1,2.4,2.7,3.3,4.9,4.8,3.6,3,4.7,3.2,4.1,2.8,2.5,2.6,3.9,5.1,3.3,2.6,2.3,2.1,2,6.2,2.3,3.1,2.1,1.8,2.6,2.9,2.9,5,2.5,3.3,5.3,1.7,3.6,4.5,3.9,3.5,4.6,3.2,2.7,2.3,2.7,3.5,4.9,5.1,5.1,2.6,5.9,2.4,2.4,2.2,2.1,3.7,2.1,3.5,2.2,5.2,6,4.8,4.8,6.1,5.4,4.8,5.8,5.1,4.5,3.7,6.5,4.4,4.7,4.6,4.2,5.2,4.6,5.9,5.3,6.8,4.4,5.3,4.8,6.1,5.3,5.1,5,5.4,4.1,6.3,5.1,6.9,4.3,4.4,7.2,11.5,6,6.9,4.5,5.6,6.6,5.4,5.3,3.8,4.7,4.7,4.7,5.2,5.4,5.3,4.6,5.9,5,5.6,3.1,4.6,3.9,5.8,4.3,5,5.1,5.1,4.3,5.8,6,3.6,6,4.6,4.5,4.2,6.7,5.1,5.5,4.6,5,4.1,4.1,5,6.9,4.6,5.2,8.3,7.2,4.8,4.6,5,8.1,6.1,5.7,7.6,6.6,4.8,4.8,5.6,7.5,5.2,6,5.7,4.7,5.9,4.8,5.8,5,8.6,6.1,4.1,5.4,9.6,6.4,6,4.4,5.6,5.3,4.8,5.2,4.9,5.5,5.9,5.1,4.5,6.5,5.2,7,5.5,6.8,5.3,6.7,4.5,4.7,6.2,7.4,4.8,5,4.7,5.9,4.1,5.5,5.2,5.4,6.3,5,5.3,5.4,5.9,4.6,5,4.4,8.9,5.6,4.7,5.3,5.8,5.4,5.3,7.3,4.1,4.7,6.3,7,7.1,6,4.6,6.4,5.3,6.4,4.8,5.7,5.7,5.6,5.2,5,7.2,5.5,7.6,4.7,6.9,6.8,5.5,6.3,4.9,7.1,4.8,6.6,6.6,5.8,4,4.5,4.5,6.4,4.8,5.3,5.1,5.7,5.6,6.8,7.7,5.4,8.6,6.5,5.5,6.4,6.9,7.5,6.5,5.9,5.8,7.4,6.6,6.6,5.4,7,7.7,6,6.3,5.6,7.3,6.3,7.3,5,6.4,8.2,4.5,6.2,5.3,4.7,5.4,7,6.3,6.6,8.6,8.5,4.4,5.7,6.8,6.7,6,5.8,4.1,3,3.4,3.4,3.5,4.9,3.6,3.4,4.6,3.7,2.8,4.9,4.3,3.2,4.1,3.7,2.6,4.4,3.2,2.9,3.3,5.9,4.1,4.2,2.9,3.2,4.3,3,4.8,3.1,2.8,4,3.2,4.8,6.9,3.6,2.9,3.1,3.1,3.1,3.7,4.1,4.2,5.9,2,3.4,4.2,5.3,4.7,9.5,4.7,5.8,3.2,5.8,5.7,4.8,4.8,5,5.8,5.5,6.4,4.1,6,5.7,5.6,5,5,5.6,4.6,4.4,6.1,5.2,4.5,6,5.3,8,6.9,7.6,5.3,5.9,6.1,6.9,8.1,5.8,5.4,4.9,5.5,6.2,6.5,5.5,4.4,8.3,5.1,6.1,4.7,5.6,4.8,6.2,7.6,4.8,5.2,5.1,6.8,4.6,5.1,6.6,5.5,6,6.2,5.9,7.1,7.4,3.9,5.3,3.9,6.3,4.6,4.5,5.3,6.6,6.9,4.8,4.4,6.8,8.6,5.2,4.8,5.8,6,6.2,8.1,4.6,4.9,4.3,5.6,6.7,5.6,6,7.1,7.1,6.5,5.2,3.8,8.4,6.2,5.8,5.4,6.2,6.4,4.9,3.8,4.3,3.6,4.3,5.7,3.6,3.8,4.4,4.7,4.4,5,4,5.6,3.6,4.7,3.6,4.2,5.5,3.3,4,5.9,4.4,5.9,4.2,4.8,3.8,5.1,6.6,3.4,4,4.4,3.6,4.7,4.8,4.2,4,5.1,4.7,5,4.8,3.8,4.5,4,3.7,6.6,6,5.6,4.9,4.7,3.9,4.1,4.8,5.1,4.1,4.2,5.3,4.2,4.9,5.2,5.4,5.1,4.9,4.6,5.3,4.3,4.6,4.5,4.5,4.5,4,5,4.9,4,4.2,5.2,3.8,6.1,5.3,4.3,3.8,4.2,4.4,6.5,5.7,4.5,5,4.4,4.6,4.9,3.6,3.9,4,3.4,2.9,4.9,5.7,3.7,4,5.8,3.4,4.2,4.6,4.4,4.5,4.7,3.1,3,3.8,4.4,4.1,4.6,3.4,4.1,4.2,6.1,5.2,3.2,5.3,3.5,3.7,5.9,3.5,4,4.2,5,3.9,3.8,4.1,4.3,3.7,3.6,4,3,4.2,3.7,4.4,3.6,3.2,2.8,3.2,4.5,4,4.6,3.2,4.4,5.1,3,8.1,4.3,4.5,3.8,2.3,3.7,4.3,3.4,4.9,4,3,4.6,5.4,4.2,4.4,3,3.1,6.4,3.9,2.9,3.4,4.1,3.8,4,3.7,3,5.4,3.2,2.4,2.9,4.2,3.9,4.4,4.9,7.4,3.8,3.5,4.6,4.7,4.1,3.6,4.2,3.5,4.5,6.9,4.6,7.4,4.4,5,5.7,4.2,4.6,4.6,5.9,5.2,3.3,3,4.8,5.1,8.2,3.2,5.1,5.4,4.7,4.7,4.7,4.1,3.3,6.8,3.4,4.3,3.5,3.6,4.8,6.4,3,5,3.9,2.6,2.7,5.7,3.2,4,6.3,2.8,2.7,4,4.1,4.5,3.7,3.7,4.8,3.5,6.2,3.9,4.5,4,7,3.2,4.3,3.9,5.9,3.6,2.9,4.3,3.1,6.9,4.3,4.6,3,8.1,4.1,2.9,4.6,4.1,4.5,3.6,3.6,4.1,5,2.6,5.2,3.2,4.8,3.7,5.5,4.7,4.6,4,2.7,5.2,4.9,4.5,2.9,3.8,3.7,5,3.3,4.7,4.9,3.2,4.2,3.8,3.3,3.9,2.6,6.9,6.9,6.1,6.1,3.9,3.6,9,4.3,6.5,8.3,3.5,4.6,8.3,4.5,5.4,8.3,5.7,3.8,4.8,5,4.1,3.5,6.8,5,10.6,4.4,6,4.5,9.7,6.4,5.2,4.6,4,5.4,11.7,5.2,3.3,5.5,10.4,3.6,6.6,4.4,4.3,4.2,6.4,6.2,4,8.8,4.7,4.1,11.6,4.4,4.4,4.5,3.9,5.1,5.5,6.9,4.2,3.6,9.2,3.8,10.5,7.5,3.9,5.8,10.6,8.3,13.2,11.8,8.4,5.6,6.7,4.2,5.6,5.7,7.3,4.5,3.8,16.3,4.3,5.5,9,6,4.7,7.1,4.4,3.8,3.6,6,6.8,6.7,4.3,4.9,6.3,3.1,3.8,8.7,4.3,10.4,10.3,6.9,5,6.1,5.3,5.3,7.6,3.6,3.3,4.2,3.5,4.8,3.9,5,5.4,6.4,3.5,4,6.8,5.5,6.4,9.5,3,7.9,7.5,5.3,9,7.8,6.7,8,5.9,7.4,5.5,8.4,4.8,9.6,7.5,9.2,8,5.7,11.8,6.2,8.5,9.6,7.8,9.7,7.4,6.3,5.9,6.7,6.7,6.7,6.7,7.5,5.3,9.4,10.4,8.1,6.7,6.7,5.9,7.2,6.9,6.8,7.7,7.3,6.9,6,8.5,8.1,7.5,8.9,8.3,10.1,5.7,7.5,10.5,7.3,6.9,7.9,8.1,7.9,9.4,6.1,12,5.5,8.5,3.2,4.8,2.6,4,3.2,3.2,2.7,2.9,4.2,4,4.8,2.6,4.9,3.6,4.6,2.9,6.4,4,4.7,4.1,4.8,3.8,5.3,4.7,6.2,3.9,5.2,4.3,3.4,4.7,3.4,4.6,3.8,4.5,6.5,4,5.2,5.5,5.8,6.9,3.4,3.9,4.7,2.7,3.9,3.3,5.3,3.6,3.2,1.8,3.4,4,3.7,4.1,5.8,6.1,3.3,5,5,6.3,6.8,3.5,4.7,4.6,4.4,4.4,4.4,4.2,3.7,4,6,6,3.4,6.2,5.5,4.5,3.6,4.1,5,5.8,5.5,3.4,4.5,4.9,5.2,4.3,4,3.6,5.8,4.7,4.2,4.6,3.7,5.4,3.2,6.4,6,6.4,3.5,4.4,4.6,4.4,3.1,5.9,4.9,4.9,4.2,4.9,5.1,4.1,4.8,4.3,4.5,7.6,4.8,4.2,4.7,5,6.3,6.6,4.9,5.6,4.9,3,6.6,6.8,4.6,6.5,3.7,5.2,7,4.6,5.3,4.6,3.5,7.3,5.1,5.1,3.8,3.8,4.8,3.7,4,3.3,3.9,4.9,3.4,5.6,4,3.9,3.2,7.6,3.1,7.9,4.3,3.5,3.6,3,3.9,3.7,3.7,3.7,4.1,3.5,3.4,5.5,4.2,7.7,4,5.1,3.5,4.2,7.7,3.9,4.3,4.5,3.7,3.2,3.4,4.1,5.2,5.6,3.9,4,4.8,4.5,3,3.3,2.9,3.6,4.6,3,3.6,4.3,4.8,3,4.4,2.8,3.8,6.3,4,5.2,3.6,2.2,4.3,5.7,3.2,3.6,3.7,3.5,3.8,2.7,4.8,3.9,3,3.2,5.1,4,3.4,5.1,3.4,3.7,3.5,3.7,8.2,5,7.1,6.5,6.5,7.4,5.2,7.3,6.3,5.3,12.3,6.4,7.8,8.1,6.4,5.6,4.1,5.8,6.8,7.7,8,4.9,5.9,5.3,5.2,10.9,11.2,9.9,4.8,6.4,7.8,15.4,9.3,5.9,8.2,4.9,4.5,5.8,7.4,5.6,4.8,9,5.8,5.9,4.2,6.8,5.7,6.3,6.3,5.4,5.9,8,5.6,6.7,5.9,7,6.7,4.5,5.3,8.3,3.8,4.5,8,5.5,5.1,6.8,8.4,5.7,5.4,5.2,5.1,6.1,4.2,7.9,6.4,9.2,7.6,6.1,10.1,7.4,6,7,6.7,4.5,5.9,5.1,5.3,6,6,7.3,6.2,4.1,4.9,6.9,5.6,5.2,5.5,5.3,5.9,7.8,5,6.4,5.1,4.5,8.7,4.5,5,4.6,5.7,5.9,5.6,6.5,4.6,5.1,6.6,7.3,9.1,4.9,5,4.7,4.6,5.6,4.7,5.9,6.6,4,5.4,7.2,8.4,6,5.2,4.9,6.1,4.1,6.2,4.9,5.4,4.9,4.8,9,4.5,4.9,6,6.9,6.8,5,5,5.4,7.7,4.9,5.5,5.1,6.4,9.9,5.5,6,7,4.2,8.8,9.9,4.3,6.1,5.6,5.4,4.4,6.4,6.8,5.1,4.4,6.6,5.5,8.1,8.4,4.1,7.3,5.8,6.7,5.1,5.8,7.6,4.6,6.9,8,4.8,7.1,6,7.4,6.1,7.6,5.8,4.6,7.2,6.1,5.9,3.6,7.3,6.6,2.9,7.7,4.4,4.3,3.5,2.4,3.8,3.6,3.7,2.3,4,4.2,3.1,3.3,4.8,2.3,2.4,9,3.2,5.5,4.9,4.5,2.7,4.8,3.3,3.1,7.9,2.1,3.1,4.2,7.1,3.5,4.3,3.3,3.1,4.6,4.7,2.5,4.5,3,4.5,4.9,6.2,6.8,7,3.2,4.3,3.9,2.9,3.5,3.3,4.1,3,4.9,4.6,3.7,3.3,2.5,5.4,4.2,4.1,2.8,3.6,2.8,3.5,2.8,3.6,3.2,3.5,2.8,2.5,2.5,3.3,3,3.2,3.2,2.6,4.5,3.4,3,3.4,3.4,3.3,3.5,2.5,2.8,3.3,2.8,3.3,3.5,3.2,2.7,2.7,2.6,3.7,3.4,2.9,2.9,2.8,4.1,3.1,2.7,2.9,2.7,3.1,2.4,3,2.3,4.3,2.8,3,3.2,3,3.7,2.5,3,3.7,3.5,2.9,4.3,3,3.6,2.4,2.5,2.8,2.5,3.5,2.7,3.2,3.3,2.6,3.1,3.1,3.2,3.8,3.1,3.4,3.3,2.6,2.7,2.8,3.2,4.6,2.9,3.2,3.4,3.7,2.7,2.9,5.8,6,5.3,4.4,4.7,5.1,5.5,5.9,5.3,7.3,8.6,7.5,6,5.8,4.9,4.6,6,2.6,2.8,2.9,3.5,2.4,3.2,2.6,3.1,2.7,2.5,7.1,4.7,5,6,5.7,7.9,6.6,5.6,5.2,4.1,4.9,4.9,4.8,4.2,5.4,6.8,6.8,4.4,5,5.6,5.1,6.2,6.9,6.9,9.1,5.6,5.4,5,7.1,7.2,6.6,6.4,7.3,5.4,9.8,6,4.5,10,9.8,8,6.4,7,7.3,6.1,7.1,9.4,8.1,5.5,7.8,8,8.3,9.3,4.5,7.6,4,4.9,7.8,5,5.2,4.4,5.1,5.2,4.4,5.1,3.3,4.6,4.9,4,4.6,4.1,4.8,5.2,3.8,4.5,2.9,4.4,5.1,5.9,5.4,4.2,4.6,4.6,5.2,3.8,4.9,5.2,4.3,4.2,3.7,4.2,5.2,5.7,4.3,3.9,5,4.1,5.9,4.1,5.8,3.5,4.2,4.7,4.6,3.8,5,4.3,4.1,4.5,3.7,4.3,4.1,3.8,4.5,4.2,4.1,3.7,4.8,4.5,5.1,5.9,4.5,4.8,5.6,6.4,6.7,5.7,3.9,5.1,4.6,5.3,5.3,4.7,5.5,4.9,4.3,5.4,6.5,5.1,5.6,6.1,5.1,6.3,4.6,4.2,4.9,4.6,5.4,4.5,8.5,4.9,5.1,5.3,5.2,7.1,4.4,5,5.3,7.8,5.8,4.4,4.3,6.5,6.5,6.4,4.7,5.1,4.5,5.1,5.7,5.4,4.6,4.6,5.1,4.9,6.8,4.7,6,5.2,5,6.8,4.7,7.3,5.4,4.5,5.1,6.2,5.2,6.3,5.4,5.7,4.9,4.8,6.9,7.3,5.5,5.5,6.6,5.6,8.9,4.7,4.9,4.8,4.9,4.8,6.2,4.4,7.3,4.2,7,6.9,4.7,5.6,4.7,8.1,4.4,5.1,2.3,3.2,3.1,2.5,3.2,1.8,3.8,2.3,2,1.9,1.8,2,2.2,2.8,3.1,2.5,2.4,2.3,2.1,2.3,2.9,2.6,2,2.9,4.1,2.4,3.1,3.1,4.5,2.9,2.9,2.9,5.3,4.5,3,2.5,1.9,3.5,2.7,14.2,1.6,3.7,5.3,2.3,3.3,1.7,2.1,2,2.7,3.6,3.5,2.7,3.7,6.8,4.6,4.3,5.3,6,3.5,6.3,5,4.2,6,4.1,4.7,4.1,5.4,6,6.2,5.5,5.5,3.7,4.3,3.4,4.6,3.9,3.9,3.9,4,6.4,4.4,4.2,5.8,4.2,3.5,4.9,6.4,4.2,5.5,4.5,3.3,5,7,7.4,4.1,4.8,6.1,4.1,3.9,5.9,4.9,3.5,5.8,4.7,4.3,7.6,3,4,9.1,4.6,6.8,4.4,5.3,7.3,4.6,4.2,5.5,4.2,6.8,4.5,4.3,3.2,4.9,4.8,4.1,7,4.4,3.7,4.9,4.7,6,5,3.5,3.7,5.9,3.9,6.4,3.6,4.1,4,3.4,5.8,3.6,7.1,3.2,7.7,3.7,4.3,5.6,4.3,5.4,5.6,8.3,2.7,4,7.5,4.8,5.2,4.9,6.3,4.9,5.2,4.1,3.7,4.5,5.7,5.2,3.1,7.9,3.6,4.3,8.8,7.5,4.9,8,6.5,6.7,3.6,5.6,9.7,7.4,5.5,4.3,3.3,4.3,7.7,9.5,4.3,5.1,5.5,4.3,6,4,6.5,6.1,4.5,7.4,6.1,5.3,7.1,3.9,6.5,4.2,5,7.7,5.4,5.6,7.3,6.5,10.4,3.5,4.5,5.2,5.2,5,7.2,3.3,6.4,6.7,5,5.2,5.1,7.1,7.3,6.9,7,5.1,7.3,7.1,6.1,5.9,4,6.8,6.6,7.4,7.2,5.7,6.2,5.9,6.7,6.1,5.9,5.8,5,6,4.3,5.2,5.9,6.3,5,5.9,5,4.9,5.4,4.5,5.9,8,6.8,5.8,5.6,5.7,6.5,5.2,5.7,7.7,8.2,6.7,4.8,4.6,7.2,7.5,7.3,6.2,6.7,4.7,5.3,5.6,6.7,7.1,8.5,8.5,5.7,6.3,8.1,7.1,8.3,7.3,5.8,6.4,4.8,7,5.1,6.3,6.9,7,7.2,6.8,6,6.9,4.7,4.9,5.9,6.6,5.1,7.7,6.8,7.8,6.7,5.1,7.5,7,5.4,7.4,5.4,8,5.9,6.6,5.6,6.6,6.2,5.2,5,5.3,4.8,6.3,5,6.1,5.6,9.1,5.2,11.4,8,5.1,5,7.4,4.5,6.6,8.4,5.7,7.1,5.8,6.8,7.1,4.9,6.1,7.7,5.8,6.6,4.7,5.8,6.2,5.4,4.7,5.8,6,5.6,8.2,4.5,5.8,8.6,9.1,4.8,5.5,11.3,5.6,5.4,4.8,5.3,6.5,6.5,7.9,5.2,1.9,2.3,4,2.4,2.5,2.4,2.5,9.8,2.9,2.5,3,2.9,2.7,2.6,5.5,3.1,1.9,3.6,3.2,14.1,2.2,2.1,3.8,2.5,2.5,2.6,2.1,2.4,1.9,3.2,2.1,2,2,2.8,2.8,2.4,2.4,2.1,3,2.9,1.8,5,2.1,3.6,2.8,2.7,3.8,2.4,2.2,3.6,13.2,2.6,2.8,2.3,3.3,2.5,2.6,2,1.9,6.8,1.9,2.4,2.9,4.3,2.3,5.6,5.1,5.3,7.4,6.6,4.5,4.7,6.7,4.9,7.1,5.9,4,5.7,6.4,6.4,6,4.9,5.2,5.9,3.8,7.3,5.8,4.4,6.1,5.3,6,5.7,6.2,4.3,5.4,5.8,6.6,5.3,5,8,6.2,6.2,5.5,6.5,7,6,4.6,7.7,6.2,7.3,5.4,4.9,4.3,7.3,7.8,5.9,5.8,4.4,4.8,5.8,7.4,4.5,5.3,6.7,4.8,4.2,7.2,5.5,5.5,4.2,6.6,7.5,5.6,6.2,5.7,5.8,5.2,7.5,5.8,4.4,4,7.4,6.1,4.2,5.8,4.6,6.8,5.5,4.1,5.9,4.9,6.9,5.9,5.8,4.8,5.1,6.2,7.3,5.4,3.7,4,4.8,4.9,6.6,5.9,4.5,3.5,5.7,5.9,4.6,4.3,4.1,3.5,8.5,4.8,4.1,3.3,3.4,4.7,5.4,5.7,3.9,4.3,4.8,12.5,4.8,5.2,3.8,4.5,5.5,4.6,7.6,7.8,3.5,8.2,3.5,6.8,5.5,3.5,4.5,6,3.9,6.4,3.8,3.6,5.3,4.2,4.6,3.2,4.2,4.9,5,9.1,6.7,5.1,4.1,2.5,4.2,6,3.5,4.3,3.7,6,5.7,7.4,5.3,12.1,5.7,6.8,5.2,4.1,5.4,4.7,4.6,4.1,4.1,4.7,5.5,4.6,5.7,5.5,7.2,5.4,3.7,5.9,3.8,3.1,4.3,5.7,4.6,7.3,4,6.8,7.6,4,6.4,8.2,5.3,3.2,4.2,6.8,5.8,6.7,2.1,5.1,3.7,3.8,5.3,8.4,4.8,5.1,5,4.5,5,6.1,7,4.5,6.7,3.3,5.2,5.3,8.8,2.9,7.6,9.9,11.3,4.7,6.2,5.3,4,3.6,5.4,2.9,3.9,3.9,3.6,6.6,7.9,5.3,5.4,7.1,4.6,5.7,4.7,4.2,7.3,8.5,6.2,5.1,5.5,4.3,4.4,3.7,4.5,5.1,4.4,2.2,4.8,7.7,4.8,3.7,7.6,11.4,4.8,5,4.6,5.6,4.6,7.3,5.1,5.5,3.2,13.1,3.9,5.5,4.6,7.9,5.1,5.9,5.4,3.4,7.5,5.9,7.5,4.3,2.8,5.9,7.1,3.6,11.9,4.5,3.2,7.7,5.3,6.6,6.1,7.4,4.9,5.5,3.9,4.8,6.4,9.8,9.6,6.9,7.8,3.9,5.9,6.3,4,6.5,3.4,5.1,5.1,14.1,5.9,3.8,4.9,8.5,4.7,4.2,4,4.1,5.5,4,7.2,4.7,3.4,6.7,8.2,7.3,5,5.6,6.7,4.6,5.7,6.2,6.4,5.8,5.6,5.2,5.4,4.4,4.6,5.4,13.3,3.6,4.2,8.5,5.1,5.8,5,4.8,11.2,17.3,6.1,3.3,3,6.1,3.4,3.1,8.6,5.9,5.3,3.5,4.6,3.4,2.8,3.2,2.8,4.8,2.2,3.2,7.3,4,4.2,2.9,3.9,9.8,3.1,3,3.5,5.3,3.7,3.1,4,4.2,2.7,5.2,3.2,3.7,3.7,2.9,4.5,4,3.1,3.3,3.1,4.3,3.6,4.9,4.3,4.6,4.7,2.6,3.6,3.6,4.1,6.4,3.5,5.9,10.9,5.1,4.5,4.3,5.9,4.4,5.2,3.8,3.3,4.4,3.8,4.6,10,4.8,4.7,3.2,3.4,4.4,3.4,4.3,3.4,6.9,3.6,3.6,5.2,3.2,5.1,6.2,3.5,3.9,5.4,3,4.4,3.8,4.2,4.1,3.7,4.4,6.9,3.2,3.7,4.6,3.1,3.8,5.6,3.7,4.5,3.5,3.3,5,4.4,4,3.9,4.5,4.5,4.9,3.6,5.6,4.9,3.6,10,3.5,3.3,3.6,4.3,3.6,6.5,4.6,3.6,5.6,3.8,4.1,4,5.6,5.9,8.1,3.9,4.6,4.2,8.7,7,4,2.9,5.2,5.1,3.5,4.4,4.5,5.8,6.6,6.4,3.1,2.7,5.9,4.7,5.1,5.7,5.2,6.5,7.4,5.5,3.5,3.5,6.8,5.1,5.4,7.2,7.4,3.6,6.2,6.7,4.7,4.4,4,3.9,4.7,4,4.1,5.9,3.9,4.8,4.7,6.5,5.1,7.6,6.6,5.9,7.6,6.6,9.8,6.5,5.3,6.6,8.7,6,7.2,3.9,5.9,5.8,6.5,8.1,4.1,8.3,6.1,7.7,8.9,6.5,3.9,6.7,6.7,4.3,6.3,7.9,5.9,8.4,5.6,6.3,5.5,7.3,5.8,4,8.5,6.9,6.5,4.8,8.5,9.1,4.9,6.8,6.8,6.1,4.5,4.1,6.5,5.3,5.4,5.9,3.4,5.2,7.1,7.4,10,13.1,6,7,7,6.7,6,11.7,4.5,4.5,4.5,8.5,5.3,3.5,7.5,5.1,5.2,4.6,6.3,5.3,5.9,8.5,5.5,5.2,4.8,8.1,7,6.3,8.2,8.1,8.1,5.7,9.4,5.6,5.1,3.9,5.8,3.6,4.2,4.9,3.4,3.6,3.2,3.3,4.3,2.8,3.7,3.4,5.2,3.8,3.4,5.5,3.6,6.2,3.7,3.1,3.9,3,7,3.7,3.9,4,4.8,3.1,3.7,2.9,5.4,4.3,4.3,3.4,5.2,4.7,8.6,5.5,3.5,3.9,4.3,3.5,3.4,3.2,3.8,3.8,3.5,3.8,5.3,3.4,4.3,4.5,3.5,3.1,5.6,3.9,3.3,3.5,3.4,3.1,4.5,4,4.6,3.4,3.6,3.7,4.6,3.7,4.7,3.3,4.4,6.8,4.1,6,4,6.6,3.3,4.3,4.4,4,3.8,6.8,3.3,3.7,4.6,4,5.4,5.7,2,5.3,4.5,4.9,15.7,14.5,14.9,14.5,15.1,13,13.7,18.7,15,14.1,9.2,12.9,10.7,12.8,12.4,8.8,9.9,11.2,13.4,16.9,10.6,19.5,13.7,12.6,3.8,8.5,13.8,15.4,17.9,17.3,18.1,6.3,9.2,14.1,12.7,14.2,14.3,12.5,15.8,13.4,18.8,17.8,13.7,14.7,12.7,15,12.2,13.7,17.7,14.5,15.6,14.3,12.8,13.6,15.4,20.6,16.9,13.8,16.1,13.3,11.5,16.5,23.4,15.4,8.2,13.2,18.1,20.6,8.9,9.1,7.6,15.3,12,14.3,11.3,19.6,16.6,18]\n\n                    const svg = d3.select(d3Container.current).append(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n                    const margin = ({top: 20, right: 20, bottom: 30, left: 40})\n                    const bins = d3.bin().thresholds(40)(values)\n                    // Changer pour un dictionnaire !\n                    var date_deb = new Date(date[0] * 1000)\n                    var date_fin = new Date(date[date.length -1] * 1000)\n                    const x = d3.scaleTime()\n                        .domain([date_deb, date_fin]).nice()\n                        .range([margin.left, width - margin.right])\n                    console.log(date_fin)\n                    console.log(date_deb)\n                    const y = d3.scaleLinear()\n                        .domain([Math.min(...values)-1, (Math.max(...values)+1)]).nice()\n                        .range([height - margin.bottom, margin.top])\n\n\n                    var xAxis = g => g\n                        .attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x))\n                        .call(g => g.append(\"text\")\n                            .attr(\"x\", width - margin.right)\n                            .attr(\"y\", -4)\n                            .attr(\"fill\", \"currentColor\")\n                            .attr(\"font-weight\", \"bold\")\n                            .attr(\"text-anchor\", \"end\"))\n\n\n                    var yAxis = g => g\n                        .attr(\"transform\", `translate(${margin.left},0)`)\n                        .call(d3.axisLeft(y))\n                        .call(g => g.select(\".domain\").remove())\n                        .call(g => g.select(\".tick:last-of-type text\").clone()\n                            .attr(\"x\", 4)\n                            .attr(\"text-anchor\", \"start\")\n                            .attr(\"font-weight\", \"bold\")\n                            .text(data.y))\n                    // // invalidation.then(() => simulation.stop());\n                    //\n                    svg.append(\"g\")\n                        .attr(\"fill\", \"steelblue\")\n                        .selectAll(\"rect\")\n                        .data(values)\n                        .join(\"rect\")\n                        .attr(\"x\", d => x(d[2]))\n                        .attr(\"width\", d =>1 )\n                        .attr(\"y\", d => 3)\n                        .attr(\"height\", d => 1);\n                    //\n                    svg.append(\"g\")\n                        .call(xAxis);\n\n                    svg.append(\"g\")\n                        .call(yAxis);\n\n                    svg.exit()\n                        .remove();\n\n                }\n            )\n\n\n            }\n        },\n\n        /*\n            useEffect has a dependency array (below). It's a list of dependency\n            variables for this useEffect block. The block will run after mount\n            and whenever any of these variables change. We still have to check\n            if the variables are valid, but we do not have to compare old props\n            to next props to decide whether to rerender.\n        */\n        [props.data, d3Container.current])\n\n\n\n\n\n    return        <div\n        className=\"d3_histogram\"\n\n        ref={d3Container}\n    />\n}\n\n"]},"metadata":{},"sourceType":"module"}