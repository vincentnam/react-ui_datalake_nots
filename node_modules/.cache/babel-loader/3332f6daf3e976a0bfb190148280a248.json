{"ast":null,"code":"var _jsxFileName = \"/app/src/components/d3component_testfield.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from \"d3\";\nexport default function D3Graph(props) {\n  const d3Container = useRef(null);\n  const initialBooks = [{\n    name: \"Harry Potter and the Philosophers Stone\",\n    author: \"J. K. Rowling\",\n    genre: \"fantasy\"\n  }, {\n    name: \"The Pedagogy of Freedom\",\n    author: \"Bell hooks\",\n    genre: \"non-fiction\"\n  }, {\n    name: \"Harry Potter and the Chamber of Secrets\",\n    author: \"J. K. Rowling\",\n    genre: \"fantasy\"\n  }, {\n    name: \"Gilgamesh\",\n    author: \"Derrek Hines\",\n    genre: \"poetry\"\n  }];\n  const [books, setBooks] = useState(initialBooks);\n  useEffect(() => {\n    if (props.data && d3Container.current) {\n      const width = 600;\n      const height = 300;\n      const data = {\n        links: [{\n          source: \"A\",\n          target: \"B\",\n          value: 1\n        }, {\n          source: \"B\",\n          \"target\": \"C\",\n          value: 20\n        }, {\n          source: \"C\",\n          target: \"A\",\n          value: 3\n        }],\n        nodes: [{\n          id: \"A\",\n          group: \"A\"\n        }, {\n          id: \"B\",\n          group: \"B\"\n        }, {\n          id: \"C\",\n          group: \"C\"\n        }]\n      };\n      const svg = d3.select(d3Container.current).append(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n\n      function color() {}\n\n      ;\n\n      color = () => {\n        const scale = d3.scaleOrdinal(d3.schemeCategory10);\n        return d => scale(d.group);\n      };\n\n      function drag() {}\n\n      ;\n\n      drag = simulation => {\n        function dragstarted(event) {\n          if (!event.active) simulation.alphaTarget(0.3).restart();\n          event.subject.fx = event.subject.x;\n          event.subject.fy = event.subject.y;\n        }\n\n        function dragged(event) {\n          event.subject.fx = event.x;\n          event.subject.fy = event.y;\n        }\n\n        function dragended(event) {\n          if (!event.active) simulation.alphaTarget(0);\n          event.subject.fx = null;\n          event.subject.fy = null;\n        }\n\n        return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n      };\n\n      svg.style(\"border\", \"1px solid black\"); // Remove old D3 elements\n\n      const links = data.links.map(d => Object.create(d));\n      const nodes = data.nodes.map(d => Object.create(d));\n      const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id)).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n      const link = svg.append(\"g\").attr(\"stroke\", \"#999\").attr(\"stroke-opacity\", 0.6).selectAll(\"line\").data(links).join(\"line\").attr(\"stroke-width\", d => Math.sqrt(d.value));\n      const node = svg.append(\"g\").attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1.5).selectAll(\"circle\").data(nodes).join(\"circle\").attr(\"r\", 5).attr(\"fill\", color).call(drag(simulation));\n      node.append(\"title\").text(d => d.id);\n      simulation.on(\"tick\", () => {\n        link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n        node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n      }); // invalidation.then(() => simulation.stop());\n\n      svg.exit().remove();\n    }\n  },\n  /*\n      useEffect has a dependency array (below). It's a list of dependency\n      variables for this useEffect block. The block will run after mount\n      and whenever any of these variables change. We still have to check\n      if the variables are valid, but we do not have to compare old props\n      to next props to decide whether to rerender.\n  */\n  [props.data, d3Container.current]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d3-graph\",\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  });\n} // import * as d3 from \"d3\"\n//\n// export default function D3component(){\n//\n//\n//\n//     function lines() {\n//         x = d3.time.scale().range([0, w - 60]);\n//         y = d3.scale.linear().range([h / 4 - 20, 0]);\n//\n//         // Compute the minimum and maximum date across symbols.\n//         x.domain([\n//             d3.min(symbols, function(d) { return d.values[0].date; }),\n//             d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n//         ]);\n//\n//         var g = svg.selectAll(\".symbol\")\n//             .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n//\n//         g.each(function(d) {\n//             var e = d3.select(this);\n//\n//             e.append(\"path\")\n//                 .attr(\"class\", \"line\");\n//\n//             e.append(\"circle\")\n//                 .attr(\"r\", 5)\n//                 .style(\"fill\", function(d) { return color(d.key); })\n//                 .style(\"stroke\", \"#000\")\n//                 .style(\"stroke-width\", \"2px\");\n//\n//             e.append(\"text\")\n//                 .attr(\"x\", 12)\n//                 .attr(\"dy\", \".31em\")\n//                 .text(d.key);\n//         });\n//\n//         function draw(k) {\n//             g.each(function(d) {\n//                 var e = d3.select(this);\n//                 y.domain([0, d.maxPrice]);\n//\n//                 e.select(\"path\")\n//                     .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n//\n//                 e.selectAll(\"circle, text\")\n//                     .data(function(d) { return [d.values[k], d.values[k]]; })\n//                     .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n//             });\n//         }\n//\n//         var k = 1, n = symbols[0].values.length;\n//         d3.timer(function() {\n//             draw(k);\n//             if ((k += 2) >= n - 1) {\n//                 draw(n - 1);\n//                 setTimeout(horizons, 500);\n//                 return true;\n//             }\n//         });\n//     }\n//\n//     function horizons() {\n//         svg.insert(\"defs\", \".symbol\")\n//             .append(\"clipPath\")\n//             .attr(\"id\", \"clip\")\n//             .append(\"rect\")\n//             .attr(\"width\", w)\n//             .attr(\"height\", h / 4 - 20);\n//\n//         var color = d3.scale.ordinal()\n//             .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n//\n//         var g = svg.selectAll(\".symbol\")\n//             .attr(\"clip-path\", \"url(#clip)\");\n//\n//         area\n//             .y0(h / 4 - 20);\n//\n//         g.select(\"circle\").transition()\n//             .duration(duration)\n//             .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n//             .remove();\n//\n//         g.select(\"text\").transition()\n//             .duration(duration)\n//             .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n//             .attr(\"dy\", \"0em\");\n//\n//         g.each(function(d) {\n//             y.domain([0, d.maxPrice]);\n//\n//             d3.select(this).selectAll(\".area\")\n//                 .data(d3.range(3))\n//                 .enter().insert(\"path\", \".line\")\n//                 .attr(\"class\", \"area\")\n//                 .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n//                 .attr(\"d\", area(d.values))\n//                 .style(\"fill\", function(d, i) { return color(i); })\n//                 .style(\"fill-opacity\", 1e-6);\n//\n//             y.domain([0, d.maxPrice / 3]);\n//\n//             d3.select(this).selectAll(\".line\").transition()\n//                 .duration(duration)\n//                 .attr(\"d\", line(d.values))\n//                 .style(\"stroke-opacity\", 1e-6);\n//\n//             d3.select(this).selectAll(\".area\").transition()\n//                 .duration(duration)\n//                 .style(\"fill-opacity\", 1)\n//                 .attr(\"d\", area(d.values))\n//                 .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n//         });\n//\n//         setTimeout(areas, duration + delay);\n//     }\n//     function areas() {\n//         var g = svg.selectAll(\".symbol\");\n//\n//         axis\n//             .y(h / 4 - 21);\n//\n//         g.select(\".line\")\n//             .attr(\"d\", function(d) { return axis(d.values); });\n//\n//         g.each(function(d) {\n//             y.domain([0, d.maxPrice]);\n//\n//             d3.select(this).select(\".line\").transition()\n//                 .duration(duration)\n//                 .style(\"stroke-opacity\", 1)\n//                 .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n//\n//             d3.select(this).selectAll(\".area\")\n//                 .filter(function(d, i) { return i; })\n//                 .transition()\n//                 .duration(duration)\n//                 .style(\"fill-opacity\", 1e-6)\n//                 .attr(\"d\", area(d.values))\n//                 .remove();\n//\n//             d3.select(this).selectAll(\".area\")\n//                 .filter(function(d, i) { return !i; })\n//                 .transition()\n//                 .duration(duration)\n//                 .style(\"fill\", color(d.key))\n//                 .attr(\"d\", area(d.values));\n//         });\n//\n//         svg.select(\"defs\").transition()\n//             .duration(duration)\n//             .remove();\n//\n//         g.transition()\n//             .duration(duration)\n//             .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n//\n//         setTimeout(stackedArea, duration + delay);\n//     }\n//\n//     function stackedArea() {\n//         var stack = d3.layout.stack()\n//             .values(function(d) { return d.values; })\n//             .x(function(d) { return d.date; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; })\n//             .order(\"reverse\");\n//\n//         stack(symbols);\n//\n//         y\n//             .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n//             .range([h, 0]);\n//\n//         line\n//             .y(function(d) { return y(d.price0); });\n//\n//         area\n//             .y0(function(d) { return y(d.price0); })\n//             .y1(function(d) { return y(d.price0 + d.price); });\n//\n//         var t = svg.selectAll(\".symbol\").transition()\n//             .duration(duration)\n//             .attr(\"transform\", \"translate(0,0)\")\n//             .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n//\n//         t.select(\"path.area\")\n//             .attr(\"d\", function(d) { return area(d.values); });\n//\n//         t.select(\"path.line\")\n//             .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         t.select(\"text\")\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n//\n//         setTimeout(streamgraph, duration + delay);\n//     }\n//\n//     function streamgraph() {\n//         var stack = d3.layout.stack()\n//             .values(function(d) { return d.values; })\n//             .x(function(d) { return d.date; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; })\n//             .order(\"reverse\")\n//             .offset(\"wiggle\");\n//\n//         stack(symbols);\n//\n//         line\n//             .y(function(d) { return y(d.price0); });\n//\n//         var t = svg.selectAll(\".symbol\").transition()\n//             .duration(duration);\n//\n//         t.select(\"path.area\")\n//             .attr(\"d\", function(d) { return area(d.values); });\n//\n//         t.select(\"path.line\")\n//             .style(\"stroke-opacity\", 1e-6)\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         t.select(\"text\")\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n//\n//         setTimeout(overlappingArea, duration + delay);\n//     }\n//\n//     function overlappingArea() {\n//         var g = svg.selectAll(\".symbol\");\n//\n//         line\n//             .y(function(d) { return y(d.price0 + d.price); });\n//\n//         g.select(\".line\")\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         y\n//             .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n//             .range([h, 0]);\n//\n//         area\n//             .y0(h)\n//             .y1(function(d) { return y(d.price); });\n//\n//         line\n//             .y(function(d) { return y(d.price); });\n//\n//         var t = g.transition()\n//             .duration(duration);\n//\n//         t.select(\".line\")\n//             .style(\"stroke-opacity\", 1)\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         t.select(\".area\")\n//             .style(\"fill-opacity\", .5)\n//             .attr(\"d\", function(d) { return area(d.values); });\n//\n//         t.select(\"text\")\n//             .attr(\"dy\", \".31em\")\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n//\n//         svg.append(\"line\")\n//             .attr(\"class\", \"line\")\n//             .attr(\"x1\", 0)\n//             .attr(\"x2\", w - 60)\n//             .attr(\"y1\", h)\n//             .attr(\"y2\", h)\n//             .style(\"stroke-opacity\", 1e-6)\n//             .transition()\n//             .duration(duration)\n//             .style(\"stroke-opacity\", 1);\n//\n//         setTimeout(groupedBar, duration + delay);\n//     }\n//     function groupedBar() {\n//         x = d3.scale.ordinal()\n//             .domain(symbols[0].values.map(function(d) { return d.date; }))\n//             .rangeBands([0, w - 60], .1);\n//\n//         var x1 = d3.scale.ordinal()\n//             .domain(symbols.map(function(d) { return d.key; }))\n//             .rangeBands([0, x.rangeBand()]);\n//\n//         var g = svg.selectAll(\".symbol\");\n//\n//         var t = g.transition()\n//             .duration(duration);\n//\n//         t.select(\".line\")\n//             .style(\"stroke-opacity\", 1e-6)\n//             .remove();\n//\n//         t.select(\".area\")\n//             .style(\"fill-opacity\", 1e-6)\n//             .remove();\n//\n//         g.each(function(p, j) {\n//             d3.select(this).selectAll(\"rect\")\n//                 .data(function(d) { return d.values; })\n//                 .enter().append(\"rect\")\n//                 .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n//                 .attr(\"y\", function(d) { return y(d.price); })\n//                 .attr(\"width\", x1.rangeBand())\n//                 .attr(\"height\", function(d) { return h - y(d.price); })\n//                 .style(\"fill\", color(p.key))\n//                 .style(\"fill-opacity\", 1e-6)\n//                 .transition()\n//                 .duration(duration)\n//                 .style(\"fill-opacity\", 1);\n//         });\n//\n//         setTimeout(stackedBar, duration + delay);\n//     }\n//     function stackedBar() {\n//         x.rangeRoundBands([0, w - 60], .1);\n//\n//         var stack = d3.layout.stack()\n//             .values(function(d) { return d.values; })\n//             .x(function(d) { return d.date; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; })\n//             .order(\"reverse\");\n//\n//         var g = svg.selectAll(\".symbol\");\n//\n//         stack(symbols);\n//\n//         y\n//             .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n//             .range([h, 0]);\n//\n//         var t = g.transition()\n//             .duration(duration / 2);\n//\n//         t.select(\"text\")\n//             .delay(symbols[0].values.length * 10)\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n//\n//         t.selectAll(\"rect\")\n//             .delay(function(d, i) { return i * 10; })\n//             .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n//             .attr(\"height\", function(d) { return h - y(d.price); })\n//             .each(\"end\", function() {\n//                 d3.select(this)\n//                     .style(\"stroke\", \"#fff\")\n//                     .style(\"stroke-opacity\", 1e-6)\n//                     .transition()\n//                     .duration(duration / 2)\n//                     .attr(\"x\", function(d) { return x(d.date); })\n//                     .attr(\"width\", x.rangeBand())\n//                     .style(\"stroke-opacity\", 1);\n//             });\n//\n//         setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n//     }\n//\n//     function transposeBar() {\n//         x\n//             .domain(symbols.map(function(d) { return d.key; }))\n//             .rangeRoundBands([0, w], .2);\n//\n//         y\n//             .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n//\n//         var stack = d3.layout.stack()\n//             .x(function(d, i) { return i; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; });\n//\n//         stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n//\n//         var g = svg.selectAll(\".symbol\");\n//\n//         var t = g.transition()\n//             .duration(duration / 2);\n//\n//         t.selectAll(\"rect\")\n//             .delay(function(d, i) { return i * 10; })\n//             .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n//             .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n//             .attr(\"x\", function(d) { return x(d.symbol); })\n//             .attr(\"width\", x.rangeBand())\n//             .style(\"stroke-opacity\", 1e-6);\n//\n//         t.select(\"text\")\n//             .attr(\"x\", 0)\n//             .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n//             .attr(\"dy\", \"1.31em\")\n//             .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n//\n//         svg.select(\"line\").transition()\n//             .duration(duration)\n//             .attr(\"x2\", w);\n//\n//         setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n//     }\n//     function donut() {\n//         var g = svg.selectAll(\".symbol\");\n//\n//         g.selectAll(\"rect\").remove();\n//\n//         var pie = d3.layout.pie()\n//             .value(function(d) { return d.sumPrice; });\n//\n//         var arc = d3.svg.arc();\n//\n//         g.append(\"path\")\n//             .style(\"fill\", function(d) { return color(d.key); })\n//             .data(function() { return pie(symbols); })\n//             .transition()\n//             .duration(duration)\n//             .tween(\"arc\", arcTween);\n//\n//         g.select(\"text\").transition()\n//             .duration(duration)\n//             .attr(\"dy\", \".31em\");\n//\n//         svg.select(\"line\").transition()\n//             .duration(duration)\n//             .attr(\"y1\", 2 * h)\n//             .attr(\"y2\", 2 * h)\n//             .remove();\n//\n//         function arcTween(d) {\n//             var path = d3.select(this),\n//                 text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n//                 x0 = x(d.data.key),\n//                 y0 = h - y(d.data.sumPrice);\n//\n//             return function(t) {\n//                 var r = h / 2 / Math.min(1, t + 1e-3),\n//                     a = Math.cos(t * Math.PI / 2),\n//                     xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n//                     yy = ((a) * h + (1 - a) * h / 2),\n//                     f = {\n//                         innerRadius: r - x.rangeBand() / (2 - a),\n//                         outerRadius: r,\n//                         startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n//                         endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n//                     };\n//\n//                 path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n//                 path.attr(\"d\", arc(f));\n//                 text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n//             };\n//         }\n//\n//         setTimeout(donutExplode, duration + delay);\n//     }\n//     function donutExplode() {\n//         var r0a = h / 2 - x.rangeBand() / 2,\n//             r1a = h / 2,\n//             r0b = 2 * h - x.rangeBand() / 2,\n//             r1b = 2 * h,\n//             arc = d3.svg.arc();\n//\n//         svg.selectAll(\".symbol path\")\n//             .each(transitionExplode);\n//\n//         function transitionExplode(d, i) {\n//             d.innerRadius = r0a;\n//             d.outerRadius = r1a;\n//             d3.select(this).transition()\n//                 .duration(duration / 2)\n//                 .tween(\"arc\", tweenArc({\n//                     innerRadius: r0b,\n//                     outerRadius: r1b\n//                 }));\n//         }\n//         function tweenArc(b) {\n//             return function(a) {\n//                 var path = d3.select(this),\n//                     text = d3.select(this.nextSibling),\n//                     i = d3.interpolate(a, b);\n//                 for (var key in b) a[key] = b[key]; // update data\n//                 return function(t) {\n//                     var a = i(t);\n//                     path.attr(\"d\", arc(a));\n//                     text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n//                 };\n//             }\n//         }\n//\n//         setTimeout(function() {\n//             svg.selectAll(\"*\").remove();\n//             svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n//             lines();\n//         }, duration);\n//     }\n//     var m = [20, 20, 30, 20],\n//         w = 960 - m[1] - m[3],\n//         h = 500 - m[0] - m[2];\n//\n//     var x,\n//         y,\n//         duration = 1500,\n//         delay = 500;\n//\n//     var color = d3.scale.category10();\n//\n//     var svg = d3.select(\"body\").append(\"svg\")\n//         .attr(\"width\", w + m[1] + m[3])\n//         .attr(\"height\", h + m[0] + m[2])\n//         .append(\"g\")\n//         .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n//\n//     var stocks,\n//         symbols;\n//\n//     // A line generator, for the dark stroke.\n//     var line = d3.svg.line()\n//         .interpolate(\"basis\")\n//         .x(function(d) { return x(d.date); })\n//         .y(function(d) { return y(d.price); });\n//\n//     // A line generator, for the dark stroke.\n//     var axis = d3.svg.line()\n//         .interpolate(\"basis\")\n//         .x(function(d) { return x(d.date); })\n//         .y(h);\n//\n//     // A area generator, for the dark stroke.\n//     var area = d3.svg.area()\n//         .interpolate(\"basis\")\n//         .x(function(d) { return x(d.date); })\n//         .y1(function(d) { return y(d.price); });\n//\n//     d3.csv(\"stocks.csv\", function(data) {\n//         var parse = d3.time.format(\"%b %Y\").parse;\n//\n//         // Nest stock values by symbol.\n//         symbols = d3.nest()\n//             .key(function(d) { return d.symbol; })\n//             .entries(stocks = data);\n//\n//         // Parse dates and numbers. We assume values are sorted by date.\n//         // Also compute the maximum price per symbol, needed for the y-domain.\n//         symbols.forEach(function(s) {\n//             s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n//             s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n//             s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n//         });\n//\n//         // Sort by maximum price, descending.\n//         symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n//\n//         var g = svg.selectAll(\"g\")\n//             .data(symbols)\n//             .enter().append(\"g\")\n//             .attr(\"class\", \"symbol\");\n//\n//         setTimeout(lines, duration);\n//     });\n//     // eslint-disable-next-line react/react-in-jsx-scope\n//     return    <div ref=\"d3component\"/>\n// }\n//\n//\n//\n//\n//\n//\n//\n//","map":{"version":3,"sources":["/app/src/components/d3component_testfield.js"],"names":["React","useEffect","useRef","useState","d3","D3Graph","props","d3Container","initialBooks","name","author","genre","books","setBooks","data","current","width","height","links","source","target","value","nodes","id","group","svg","select","append","attr","color","scale","scaleOrdinal","schemeCategory10","d","drag","simulation","dragstarted","event","active","alphaTarget","restart","subject","fx","x","fy","y","dragged","dragended","on","style","map","Object","create","forceSimulation","force","forceLink","forceManyBody","forceCenter","link","selectAll","join","Math","sqrt","node","call","text","exit","remove"],"mappings":"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":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from \"d3\";\n\n\n\n\n\n\n\n\nexport default function D3Graph(props){\n\n    const d3Container = useRef(null);\n    const initialBooks = [\n        {\n            name: \"Harry Potter and the Philosophers Stone\",\n            author: \"J. K. Rowling\",\n            genre: \"fantasy\"\n        },{\n            name: \"The Pedagogy of Freedom\",\n            author: \"Bell hooks\",\n            genre: \"non-fiction\"\n        },{\n            name: \"Harry Potter and the Chamber of Secrets\",\n            author: \"J. K. Rowling\",\n            genre: \"fantasy\"\n        },{\n            name: \"Gilgamesh\",\n            author: \"Derrek Hines\",\n            genre: \"poetry\"\n        }\n    ]\n    const [books, setBooks] = useState(initialBooks)\n\n    useEffect(\n        () => {\n            if (props.data && d3Container.current) {\n                const width = 600;\n                const height=300;\n                const data ={\n                    links: [{source:\"A\",target:\"B\",value:1},{source:\"B\",\"target\":\"C\",value:20},{source:\"C\", target: \"A\",value:3}],\n                    nodes: [{id:\"A\",group:\"A\"},{id:\"B\", group:\"B\"},{id:\"C\",group:\"C\"}]\n\n                }\n                const svg = d3.select(d3Container.current).append(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n                function color(){};\n                color = () => {\n                    const scale = d3.scaleOrdinal(d3.schemeCategory10);\n                    return d => scale(d.group);\n                }\n                function drag(){};\n                drag = (simulation) => {\n\n                    function dragstarted(event) {\n                        if (!event.active) simulation.alphaTarget(0.3).restart();\n                        event.subject.fx = event.subject.x;\n                        event.subject.fy = event.subject.y;\n                    }\n\n                    function dragged(event) {\n                        event.subject.fx = event.x;\n                        event.subject.fy = event.y;\n                    }\n\n                    function dragended(event) {\n                        if (!event.active) simulation.alphaTarget(0);\n                        event.subject.fx = null;\n                        event.subject.fy = null;\n                    }\n\n                    return d3.drag()\n                        .on(\"start\", dragstarted)\n                        .on(\"drag\", dragged)\n                        .on(\"end\", dragended);\n                }\n\n\n                svg.style(\"border\", \"1px solid black\")\n                // Remove old D3 elements\n                const links = data.links.map(d => Object.create(d));\n                const nodes = data.nodes.map(d => Object.create(d));\n\n                const simulation = d3.forceSimulation(nodes)\n                    .force(\"link\", d3.forceLink(links).id(d => d.id))\n                    .force(\"charge\", d3.forceManyBody())\n                    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n\n\n                const link = svg.append(\"g\")\n                    .attr(\"stroke\", \"#999\")\n                    .attr(\"stroke-opacity\", 0.6)\n                    .selectAll(\"line\")\n                    .data(links)\n                    .join(\"line\")\n                    .attr(\"stroke-width\", d => Math.sqrt(d.value));\n\n                const node = svg.append(\"g\")\n                    .attr(\"stroke\", \"#fff\")\n                    .attr(\"stroke-width\", 1.5)\n                    .selectAll(\"circle\")\n                    .data(nodes)\n                    .join(\"circle\")\n                    .attr(\"r\", 5)\n                    .attr(\"fill\", color)\n                    .call(drag(simulation));\n\n                node.append(\"title\")\n                    .text(d => d.id);\n\n                simulation.on(\"tick\", () => {\n                    link\n                        .attr(\"x1\", d => d.source.x)\n                        .attr(\"y1\", d => d.source.y)\n                        .attr(\"x2\", d => d.target.x)\n                        .attr(\"y2\", d => d.target.y);\n\n                    node\n                        .attr(\"cx\", d => d.x)\n                        .attr(\"cy\", d => d.y);\n                });\n\n                // invalidation.then(() => simulation.stop());\n\n                svg.exit()\n                    .remove();\n            }\n        },\n\n        /*\n            useEffect has a dependency array (below). It's a list of dependency\n            variables for this useEffect block. The block will run after mount\n            and whenever any of these variables change. We still have to check\n            if the variables are valid, but we do not have to compare old props\n            to next props to decide whether to rerender.\n        */\n        [props.data, d3Container.current])\n\n\n\n\n\n\n    return        <div\n        className=\"d3-graph\"\n\n        ref={d3Container}\n    />\n}\n\n\n\n\n\n// import * as d3 from \"d3\"\n//\n// export default function D3component(){\n//\n//\n//\n//     function lines() {\n//         x = d3.time.scale().range([0, w - 60]);\n//         y = d3.scale.linear().range([h / 4 - 20, 0]);\n//\n//         // Compute the minimum and maximum date across symbols.\n//         x.domain([\n//             d3.min(symbols, function(d) { return d.values[0].date; }),\n//             d3.max(symbols, function(d) { return d.values[d.values.length - 1].date; })\n//         ]);\n//\n//         var g = svg.selectAll(\".symbol\")\n//             .attr(\"transform\", function(d, i) { return \"translate(0,\" + (i * h / 4 + 10) + \")\"; });\n//\n//         g.each(function(d) {\n//             var e = d3.select(this);\n//\n//             e.append(\"path\")\n//                 .attr(\"class\", \"line\");\n//\n//             e.append(\"circle\")\n//                 .attr(\"r\", 5)\n//                 .style(\"fill\", function(d) { return color(d.key); })\n//                 .style(\"stroke\", \"#000\")\n//                 .style(\"stroke-width\", \"2px\");\n//\n//             e.append(\"text\")\n//                 .attr(\"x\", 12)\n//                 .attr(\"dy\", \".31em\")\n//                 .text(d.key);\n//         });\n//\n//         function draw(k) {\n//             g.each(function(d) {\n//                 var e = d3.select(this);\n//                 y.domain([0, d.maxPrice]);\n//\n//                 e.select(\"path\")\n//                     .attr(\"d\", function(d) { return line(d.values.slice(0, k + 1)); });\n//\n//                 e.selectAll(\"circle, text\")\n//                     .data(function(d) { return [d.values[k], d.values[k]]; })\n//                     .attr(\"transform\", function(d) { return \"translate(\" + x(d.date) + \",\" + y(d.price) + \")\"; });\n//             });\n//         }\n//\n//         var k = 1, n = symbols[0].values.length;\n//         d3.timer(function() {\n//             draw(k);\n//             if ((k += 2) >= n - 1) {\n//                 draw(n - 1);\n//                 setTimeout(horizons, 500);\n//                 return true;\n//             }\n//         });\n//     }\n//\n//     function horizons() {\n//         svg.insert(\"defs\", \".symbol\")\n//             .append(\"clipPath\")\n//             .attr(\"id\", \"clip\")\n//             .append(\"rect\")\n//             .attr(\"width\", w)\n//             .attr(\"height\", h / 4 - 20);\n//\n//         var color = d3.scale.ordinal()\n//             .range([\"#c6dbef\", \"#9ecae1\", \"#6baed6\"]);\n//\n//         var g = svg.selectAll(\".symbol\")\n//             .attr(\"clip-path\", \"url(#clip)\");\n//\n//         area\n//             .y0(h / 4 - 20);\n//\n//         g.select(\"circle\").transition()\n//             .duration(duration)\n//             .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (-h / 4) + \")\"; })\n//             .remove();\n//\n//         g.select(\"text\").transition()\n//             .duration(duration)\n//             .attr(\"transform\", function(d) { return \"translate(\" + (w - 60) + \",\" + (h / 4 - 20) + \")\"; })\n//             .attr(\"dy\", \"0em\");\n//\n//         g.each(function(d) {\n//             y.domain([0, d.maxPrice]);\n//\n//             d3.select(this).selectAll(\".area\")\n//                 .data(d3.range(3))\n//                 .enter().insert(\"path\", \".line\")\n//                 .attr(\"class\", \"area\")\n//                 .attr(\"transform\", function(d) { return \"translate(0,\" + (d * (h / 4 - 20)) + \")\"; })\n//                 .attr(\"d\", area(d.values))\n//                 .style(\"fill\", function(d, i) { return color(i); })\n//                 .style(\"fill-opacity\", 1e-6);\n//\n//             y.domain([0, d.maxPrice / 3]);\n//\n//             d3.select(this).selectAll(\".line\").transition()\n//                 .duration(duration)\n//                 .attr(\"d\", line(d.values))\n//                 .style(\"stroke-opacity\", 1e-6);\n//\n//             d3.select(this).selectAll(\".area\").transition()\n//                 .duration(duration)\n//                 .style(\"fill-opacity\", 1)\n//                 .attr(\"d\", area(d.values))\n//                 .each(\"end\", function() { d3.select(this).style(\"fill-opacity\", null); });\n//         });\n//\n//         setTimeout(areas, duration + delay);\n//     }\n//     function areas() {\n//         var g = svg.selectAll(\".symbol\");\n//\n//         axis\n//             .y(h / 4 - 21);\n//\n//         g.select(\".line\")\n//             .attr(\"d\", function(d) { return axis(d.values); });\n//\n//         g.each(function(d) {\n//             y.domain([0, d.maxPrice]);\n//\n//             d3.select(this).select(\".line\").transition()\n//                 .duration(duration)\n//                 .style(\"stroke-opacity\", 1)\n//                 .each(\"end\", function() { d3.select(this).style(\"stroke-opacity\", null); });\n//\n//             d3.select(this).selectAll(\".area\")\n//                 .filter(function(d, i) { return i; })\n//                 .transition()\n//                 .duration(duration)\n//                 .style(\"fill-opacity\", 1e-6)\n//                 .attr(\"d\", area(d.values))\n//                 .remove();\n//\n//             d3.select(this).selectAll(\".area\")\n//                 .filter(function(d, i) { return !i; })\n//                 .transition()\n//                 .duration(duration)\n//                 .style(\"fill\", color(d.key))\n//                 .attr(\"d\", area(d.values));\n//         });\n//\n//         svg.select(\"defs\").transition()\n//             .duration(duration)\n//             .remove();\n//\n//         g.transition()\n//             .duration(duration)\n//             .each(\"end\", function() { d3.select(this).attr(\"clip-path\", null); });\n//\n//         setTimeout(stackedArea, duration + delay);\n//     }\n//\n//     function stackedArea() {\n//         var stack = d3.layout.stack()\n//             .values(function(d) { return d.values; })\n//             .x(function(d) { return d.date; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; })\n//             .order(\"reverse\");\n//\n//         stack(symbols);\n//\n//         y\n//             .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n//             .range([h, 0]);\n//\n//         line\n//             .y(function(d) { return y(d.price0); });\n//\n//         area\n//             .y0(function(d) { return y(d.price0); })\n//             .y1(function(d) { return y(d.price0 + d.price); });\n//\n//         var t = svg.selectAll(\".symbol\").transition()\n//             .duration(duration)\n//             .attr(\"transform\", \"translate(0,0)\")\n//             .each(\"end\", function() { d3.select(this).attr(\"transform\", null); });\n//\n//         t.select(\"path.area\")\n//             .attr(\"d\", function(d) { return area(d.values); });\n//\n//         t.select(\"path.line\")\n//             .style(\"stroke-opacity\", function(d, i) { return i < 3 ? 1e-6 : 1; })\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         t.select(\"text\")\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n//\n//         setTimeout(streamgraph, duration + delay);\n//     }\n//\n//     function streamgraph() {\n//         var stack = d3.layout.stack()\n//             .values(function(d) { return d.values; })\n//             .x(function(d) { return d.date; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; })\n//             .order(\"reverse\")\n//             .offset(\"wiggle\");\n//\n//         stack(symbols);\n//\n//         line\n//             .y(function(d) { return y(d.price0); });\n//\n//         var t = svg.selectAll(\".symbol\").transition()\n//             .duration(duration);\n//\n//         t.select(\"path.area\")\n//             .attr(\"d\", function(d) { return area(d.values); });\n//\n//         t.select(\"path.line\")\n//             .style(\"stroke-opacity\", 1e-6)\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         t.select(\"text\")\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n//\n//         setTimeout(overlappingArea, duration + delay);\n//     }\n//\n//     function overlappingArea() {\n//         var g = svg.selectAll(\".symbol\");\n//\n//         line\n//             .y(function(d) { return y(d.price0 + d.price); });\n//\n//         g.select(\".line\")\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         y\n//             .domain([0, d3.max(symbols.map(function(d) { return d.maxPrice; }))])\n//             .range([h, 0]);\n//\n//         area\n//             .y0(h)\n//             .y1(function(d) { return y(d.price); });\n//\n//         line\n//             .y(function(d) { return y(d.price); });\n//\n//         var t = g.transition()\n//             .duration(duration);\n//\n//         t.select(\".line\")\n//             .style(\"stroke-opacity\", 1)\n//             .attr(\"d\", function(d) { return line(d.values); });\n//\n//         t.select(\".area\")\n//             .style(\"fill-opacity\", .5)\n//             .attr(\"d\", function(d) { return area(d.values); });\n//\n//         t.select(\"text\")\n//             .attr(\"dy\", \".31em\")\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price) + \")\"; });\n//\n//         svg.append(\"line\")\n//             .attr(\"class\", \"line\")\n//             .attr(\"x1\", 0)\n//             .attr(\"x2\", w - 60)\n//             .attr(\"y1\", h)\n//             .attr(\"y2\", h)\n//             .style(\"stroke-opacity\", 1e-6)\n//             .transition()\n//             .duration(duration)\n//             .style(\"stroke-opacity\", 1);\n//\n//         setTimeout(groupedBar, duration + delay);\n//     }\n//     function groupedBar() {\n//         x = d3.scale.ordinal()\n//             .domain(symbols[0].values.map(function(d) { return d.date; }))\n//             .rangeBands([0, w - 60], .1);\n//\n//         var x1 = d3.scale.ordinal()\n//             .domain(symbols.map(function(d) { return d.key; }))\n//             .rangeBands([0, x.rangeBand()]);\n//\n//         var g = svg.selectAll(\".symbol\");\n//\n//         var t = g.transition()\n//             .duration(duration);\n//\n//         t.select(\".line\")\n//             .style(\"stroke-opacity\", 1e-6)\n//             .remove();\n//\n//         t.select(\".area\")\n//             .style(\"fill-opacity\", 1e-6)\n//             .remove();\n//\n//         g.each(function(p, j) {\n//             d3.select(this).selectAll(\"rect\")\n//                 .data(function(d) { return d.values; })\n//                 .enter().append(\"rect\")\n//                 .attr(\"x\", function(d) { return x(d.date) + x1(p.key); })\n//                 .attr(\"y\", function(d) { return y(d.price); })\n//                 .attr(\"width\", x1.rangeBand())\n//                 .attr(\"height\", function(d) { return h - y(d.price); })\n//                 .style(\"fill\", color(p.key))\n//                 .style(\"fill-opacity\", 1e-6)\n//                 .transition()\n//                 .duration(duration)\n//                 .style(\"fill-opacity\", 1);\n//         });\n//\n//         setTimeout(stackedBar, duration + delay);\n//     }\n//     function stackedBar() {\n//         x.rangeRoundBands([0, w - 60], .1);\n//\n//         var stack = d3.layout.stack()\n//             .values(function(d) { return d.values; })\n//             .x(function(d) { return d.date; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; })\n//             .order(\"reverse\");\n//\n//         var g = svg.selectAll(\".symbol\");\n//\n//         stack(symbols);\n//\n//         y\n//             .domain([0, d3.max(symbols[0].values.map(function(d) { return d.price + d.price0; }))])\n//             .range([h, 0]);\n//\n//         var t = g.transition()\n//             .duration(duration / 2);\n//\n//         t.select(\"text\")\n//             .delay(symbols[0].values.length * 10)\n//             .attr(\"transform\", function(d) { d = d.values[d.values.length - 1]; return \"translate(\" + (w - 60) + \",\" + y(d.price / 2 + d.price0) + \")\"; });\n//\n//         t.selectAll(\"rect\")\n//             .delay(function(d, i) { return i * 10; })\n//             .attr(\"y\", function(d) { return y(d.price0 + d.price); })\n//             .attr(\"height\", function(d) { return h - y(d.price); })\n//             .each(\"end\", function() {\n//                 d3.select(this)\n//                     .style(\"stroke\", \"#fff\")\n//                     .style(\"stroke-opacity\", 1e-6)\n//                     .transition()\n//                     .duration(duration / 2)\n//                     .attr(\"x\", function(d) { return x(d.date); })\n//                     .attr(\"width\", x.rangeBand())\n//                     .style(\"stroke-opacity\", 1);\n//             });\n//\n//         setTimeout(transposeBar, duration + symbols[0].values.length * 10 + delay);\n//     }\n//\n//     function transposeBar() {\n//         x\n//             .domain(symbols.map(function(d) { return d.key; }))\n//             .rangeRoundBands([0, w], .2);\n//\n//         y\n//             .domain([0, d3.max(symbols.map(function(d) { return d3.sum(d.values.map(function(d) { return d.price; })); }))]);\n//\n//         var stack = d3.layout.stack()\n//             .x(function(d, i) { return i; })\n//             .y(function(d) { return d.price; })\n//             .out(function(d, y0, y) { d.price0 = y0; });\n//\n//         stack(d3.zip.apply(null, symbols.map(function(d) { return d.values; }))); // transpose!\n//\n//         var g = svg.selectAll(\".symbol\");\n//\n//         var t = g.transition()\n//             .duration(duration / 2);\n//\n//         t.selectAll(\"rect\")\n//             .delay(function(d, i) { return i * 10; })\n//             .attr(\"y\", function(d) { return y(d.price0 + d.price) - 1; })\n//             .attr(\"height\", function(d) { return h - y(d.price) + 1; })\n//             .attr(\"x\", function(d) { return x(d.symbol); })\n//             .attr(\"width\", x.rangeBand())\n//             .style(\"stroke-opacity\", 1e-6);\n//\n//         t.select(\"text\")\n//             .attr(\"x\", 0)\n//             .attr(\"transform\", function(d) { return \"translate(\" + (x(d.key) + x.rangeBand() / 2) + \",\" + h + \")\"; })\n//             .attr(\"dy\", \"1.31em\")\n//             .each(\"end\", function() { d3.select(this).attr(\"x\", null).attr(\"text-anchor\", \"middle\"); });\n//\n//         svg.select(\"line\").transition()\n//             .duration(duration)\n//             .attr(\"x2\", w);\n//\n//         setTimeout(donut,  duration / 2 + symbols[0].values.length * 10 + delay);\n//     }\n//     function donut() {\n//         var g = svg.selectAll(\".symbol\");\n//\n//         g.selectAll(\"rect\").remove();\n//\n//         var pie = d3.layout.pie()\n//             .value(function(d) { return d.sumPrice; });\n//\n//         var arc = d3.svg.arc();\n//\n//         g.append(\"path\")\n//             .style(\"fill\", function(d) { return color(d.key); })\n//             .data(function() { return pie(symbols); })\n//             .transition()\n//             .duration(duration)\n//             .tween(\"arc\", arcTween);\n//\n//         g.select(\"text\").transition()\n//             .duration(duration)\n//             .attr(\"dy\", \".31em\");\n//\n//         svg.select(\"line\").transition()\n//             .duration(duration)\n//             .attr(\"y1\", 2 * h)\n//             .attr(\"y2\", 2 * h)\n//             .remove();\n//\n//         function arcTween(d) {\n//             var path = d3.select(this),\n//                 text = d3.select(this.parentNode.appendChild(this.previousSibling)),\n//                 x0 = x(d.data.key),\n//                 y0 = h - y(d.data.sumPrice);\n//\n//             return function(t) {\n//                 var r = h / 2 / Math.min(1, t + 1e-3),\n//                     a = Math.cos(t * Math.PI / 2),\n//                     xx = (-r + (a) * (x0 + x.rangeBand()) + (1 - a) * (w + h) / 2),\n//                     yy = ((a) * h + (1 - a) * h / 2),\n//                     f = {\n//                         innerRadius: r - x.rangeBand() / (2 - a),\n//                         outerRadius: r,\n//                         startAngle: a * (Math.PI / 2 - y0 / r) + (1 - a) * d.startAngle,\n//                         endAngle: a * (Math.PI / 2) + (1 - a) * d.endAngle\n//                     };\n//\n//                 path.attr(\"transform\", \"translate(\" + xx + \",\" + yy + \")\");\n//                 path.attr(\"d\", arc(f));\n//                 text.attr(\"transform\", \"translate(\" + arc.centroid(f) + \")translate(\" + xx + \",\" + yy + \")rotate(\" + ((f.startAngle + f.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n//             };\n//         }\n//\n//         setTimeout(donutExplode, duration + delay);\n//     }\n//     function donutExplode() {\n//         var r0a = h / 2 - x.rangeBand() / 2,\n//             r1a = h / 2,\n//             r0b = 2 * h - x.rangeBand() / 2,\n//             r1b = 2 * h,\n//             arc = d3.svg.arc();\n//\n//         svg.selectAll(\".symbol path\")\n//             .each(transitionExplode);\n//\n//         function transitionExplode(d, i) {\n//             d.innerRadius = r0a;\n//             d.outerRadius = r1a;\n//             d3.select(this).transition()\n//                 .duration(duration / 2)\n//                 .tween(\"arc\", tweenArc({\n//                     innerRadius: r0b,\n//                     outerRadius: r1b\n//                 }));\n//         }\n//         function tweenArc(b) {\n//             return function(a) {\n//                 var path = d3.select(this),\n//                     text = d3.select(this.nextSibling),\n//                     i = d3.interpolate(a, b);\n//                 for (var key in b) a[key] = b[key]; // update data\n//                 return function(t) {\n//                     var a = i(t);\n//                     path.attr(\"d\", arc(a));\n//                     text.attr(\"transform\", \"translate(\" + arc.centroid(a) + \")translate(\" + w / 2 + \",\" + h / 2 +\")rotate(\" + ((a.startAngle + a.endAngle) / 2 + 3 * Math.PI / 2) * 180 / Math.PI + \")\");\n//                 };\n//             }\n//         }\n//\n//         setTimeout(function() {\n//             svg.selectAll(\"*\").remove();\n//             svg.selectAll(\"g\").data(symbols).enter().append(\"g\").attr(\"class\", \"symbol\");\n//             lines();\n//         }, duration);\n//     }\n//     var m = [20, 20, 30, 20],\n//         w = 960 - m[1] - m[3],\n//         h = 500 - m[0] - m[2];\n//\n//     var x,\n//         y,\n//         duration = 1500,\n//         delay = 500;\n//\n//     var color = d3.scale.category10();\n//\n//     var svg = d3.select(\"body\").append(\"svg\")\n//         .attr(\"width\", w + m[1] + m[3])\n//         .attr(\"height\", h + m[0] + m[2])\n//         .append(\"g\")\n//         .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n//\n//     var stocks,\n//         symbols;\n//\n//     // A line generator, for the dark stroke.\n//     var line = d3.svg.line()\n//         .interpolate(\"basis\")\n//         .x(function(d) { return x(d.date); })\n//         .y(function(d) { return y(d.price); });\n//\n//     // A line generator, for the dark stroke.\n//     var axis = d3.svg.line()\n//         .interpolate(\"basis\")\n//         .x(function(d) { return x(d.date); })\n//         .y(h);\n//\n//     // A area generator, for the dark stroke.\n//     var area = d3.svg.area()\n//         .interpolate(\"basis\")\n//         .x(function(d) { return x(d.date); })\n//         .y1(function(d) { return y(d.price); });\n//\n//     d3.csv(\"stocks.csv\", function(data) {\n//         var parse = d3.time.format(\"%b %Y\").parse;\n//\n//         // Nest stock values by symbol.\n//         symbols = d3.nest()\n//             .key(function(d) { return d.symbol; })\n//             .entries(stocks = data);\n//\n//         // Parse dates and numbers. We assume values are sorted by date.\n//         // Also compute the maximum price per symbol, needed for the y-domain.\n//         symbols.forEach(function(s) {\n//             s.values.forEach(function(d) { d.date = parse(d.date); d.price = +d.price; });\n//             s.maxPrice = d3.max(s.values, function(d) { return d.price; });\n//             s.sumPrice = d3.sum(s.values, function(d) { return d.price; });\n//         });\n//\n//         // Sort by maximum price, descending.\n//         symbols.sort(function(a, b) { return b.maxPrice - a.maxPrice; });\n//\n//         var g = svg.selectAll(\"g\")\n//             .data(symbols)\n//             .enter().append(\"g\")\n//             .attr(\"class\", \"symbol\");\n//\n//         setTimeout(lines, duration);\n//     });\n//     // eslint-disable-next-line react/react-in-jsx-scope\n//     return    <div ref=\"d3component\"/>\n// }\n//\n//\n//\n//\n//\n//\n//\n//\n"]},"metadata":{},"sourceType":"module"}