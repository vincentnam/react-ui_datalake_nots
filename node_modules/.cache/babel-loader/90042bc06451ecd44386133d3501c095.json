{"ast":null,"code":"var _jsxFileName = \"/app/src/components/DropZoneCard.js\";\nimport React, { createRef, useCallback, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ListGroup } from \"react-bootstrap\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport { View } from \"react-native-web\";\nimport axios, { post } from 'axios';\nconst api_rest = \"http://127.0.0.1:5000\";\nconst upload_file_url = \"/upload_file\";\nexport default function DropZoneCard(props) {\n  function upload_file(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    return post(api_rest + upload_file_url, formData, config);\n  }\n\n  function send_click(e) {\n    files.forEach(file => console.log(file));\n    files.forEach(file => upload_file(file).then(response => console.log(response)));\n  }\n\n  const [files, setFiles] = useState([]);\n  const dropzoneRef = createRef();\n\n  const openDialog = () => {\n    // Note that the ref is set async,\n    // so it might be null at some point\n    if (dropzoneRef.current) {\n      dropzoneRef.current.open();\n    }\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      files.push(file);\n      setFiles(files);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    onDrop: onDrop,\n    noClick: true,\n    noKeyboard: true,\n    addRemoveLink: true,\n    on: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    acceptedFiles\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n      className: 'dropzone'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, \"Glisser-d\\xE9poser un fichier dans cette zone\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: openDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"Choisir un fichier\"))), /*#__PURE__*/React.createElement(View, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"Files\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, files.map(file => /*#__PURE__*/React.createElement(\"li\", {\n      key: file.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }, file.path, \" - \", file.size, \" bytes\"))))));\n  }), /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: send_click,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      backgroundColor: \"#F16E10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"T\\xE9leverser - Upload\")));\n} //\n// export class DropZoneCard extends React.Component {\n//\n//\n//     getDropZoneHandler(event){\n//\n//     }\n//     constructor (props) {\n//         super(props)\n//\n//         this.state = { files: [] }\n//     }\n//     render() {\n//\n//\n//\n//     }\n//\n// }\n// export default DropZoneCard","map":{"version":3,"sources":["/app/src/components/DropZoneCard.js"],"names":["React","createRef","useCallback","useState","Button","Card","Grid","makeStyles","ListGroup","Dropzone","useDropzone","View","axios","post","api_rest","upload_file_url","DropZoneCard","props","upload_file","file","formData","FormData","append","config","headers","send_click","e","files","forEach","console","log","then","response","setFiles","dropzoneRef","openDialog","current","open","onDrop","acceptedFiles","push","getRootProps","getInputProps","textAlign","className","map","path","size","backgroundColor"],"mappings":"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","sourcesContent":["import React, {createRef, useCallback, useState} from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {ListGroup} from \"react-bootstrap\";\nimport Dropzone, {useDropzone} from \"react-dropzone\";\nimport {View} from \"react-native-web\";\nimport axios, { post } from 'axios';\n\n\nconst api_rest = \"http://127.0.0.1:5000\"\nconst upload_file_url=\"/upload_file\"\n\nexport default function DropZoneCard (props){\n    function upload_file(file){\n        const formData = new FormData();\n        formData.append('file',file);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        return post(api_rest + upload_file_url, formData, config)\n\n    }\n    function send_click(e){\n\n\n        files.forEach(file => console.log(file))\n        files.forEach(file => upload_file(file).then(response => console.log(response)))\n    }\n    const [files, setFiles] = useState([]);\n    const dropzoneRef = createRef();\n    const openDialog = () => {\n        // Note that the ref is set async,\n        // so it might be null at some point\n        if (dropzoneRef.current) {\n            dropzoneRef.current.open()\n        }\n    };\n\n    const onDrop = useCallback((acceptedFiles) => {\n        acceptedFiles.forEach((file) => {\n            files.push(file)\n            setFiles(files)\n        })\n\n    }, [])\n    const {getRootProps, getInputProps} = useDropzone({onDrop})\n\n    return <Card>\n        {/*<DropzoneComponent ref=\"dropzone\" config={props.config}*/}\n        {/*                   eventHandlers={props.eventHandlers}*/}\n        {/*                   djsConfig={props.djsConfig}*/}\n        {/*                   onChange={setdropFiles}*/}\n        {/*/>*/}\n\n\n        {/*<Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>*/}\n        {/*    {({getRootProps, getInputProps}) => (*/}\n        {/*        <section>*/}\n        {/*            <div {...getRootProps()}>*/}\n        {/*                <input {...getInputProps()} />*/}\n        {/*                <p>Drag 'n' drop some files here, or click to select files</p>*/}\n        {/*            </div>*/}\n        {/*        </section>*/}\n        {/*    )}*/}\n        {/*</Dropzone>*/}\n        <Dropzone  ref={dropzoneRef} onDrop={onDrop} noClick noKeyboard addRemoveLink={true} on>\n            {({getRootProps, getInputProps, acceptedFiles}) => {\n                return (\n                    <div className=\"container\">\n                        <View style={{ textAlign:'center'}}>\n                            <div  {...getRootProps({className: 'dropzone'})} >\n                                <input {...getInputProps()} />\n                                <p >Glisser-déposer un fichier dans cette zone</p>\n                                <button\n                                    type=\"button\"\n                                    onClick={openDialog}\n                                >\n                                    Choisir un fichier\n                                </button>\n                            </div>\n                        </View>\n                        <View style={{ textAlign:'center'}}>\n                            <aside>\n                                <h4>Files</h4>\n                                <ul>\n                                    {files.map(file => (\n                                        <li key={file.path}>\n                                            {file.path} - {file.size} bytes\n                                        </li>\n                                    ))}\n                                </ul>\n                            </aside>\n                        </View>\n                    </div>\n                );\n            }}\n        </Dropzone>\n        <View >\n            <Button onClick={send_click} variant=\"contained\" color=\"primary\" style={{backgroundColor:\"#F16E10\"}}>\n                Téleverser - Upload\n            </Button>\n        </View>\n    </Card>\n}\n//\n// export class DropZoneCard extends React.Component {\n//\n//\n//     getDropZoneHandler(event){\n//\n//     }\n//     constructor (props) {\n//         super(props)\n//\n//         this.state = { files: [] }\n//     }\n//     render() {\n//\n//\n//\n//     }\n//\n// }\n\n// export default DropZoneCard"]},"metadata":{},"sourceType":"module"}