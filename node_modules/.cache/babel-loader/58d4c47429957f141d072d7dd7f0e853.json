{"ast":null,"code":"var _jsxFileName = \"/app/src/components/d3component_testfield.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from \"d3\";\nexport default function D3Test(props) {\n  const d3Container = useRef(null);\n  useEffect(() => {\n    const width = 300;\n    const height = 300;\n    const svg = d3.select(d3Container.current).attr(\"viewbox\", [0, 0, width, height]).attr(\"width\", width).attr(\"height\", height);\n    var y_scale = d3.scaleLinear().domain([10, 100]).range([0, height]).nice();\n\n    function formatTick(d) {\n      const s = (d / 1e6).toFixed(1);\n      return this.parentNode.nextSibling ? `\\xa0${s}` : `$${s} million`;\n    }\n\n    var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width).tickFormat(formatTick);\n    svg.selectAll(\"circle\").data(y_scale.ticks()).join(\"line\").attr(\"x1\", 150).attr(\"x2\", 250).attr(\"y1\", d => y_scale(d)).attr(\"y2\", d => y_scale(d)).attr(\"stroke\", \"black\");\n    svg.append(\"g\").attr(\"stroke-opacity\", 0.5).attr(\"stroke-dasharray\", \"2,2\").attr(\"transform\", \"translate(50,10)\").call(y_axis);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"d3_test\",\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["/app/src/components/d3component_testfield.js"],"names":["React","useEffect","useRef","useState","d3","D3Test","props","d3Container","width","height","svg","select","current","attr","y_scale","scaleLinear","domain","range","nice","formatTick","d","s","toFixed","parentNode","nextSibling","y_axis","axisRight","scale","ticks","tickSize","tickFormat","selectAll","data","join","append","call"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AASA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AACjC,QAAMC,WAAW,GAAGL,MAAM,CAAC,IAAD,CAA1B;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMO,KAAK,GAAG,GAAd;AACA,UAAMC,MAAM,GAAG,GAAf;AACA,UAAMC,GAAG,GAAGN,EAAE,CAACO,MAAH,CAAUJ,WAAW,CAACK,OAAtB,EAA+BC,IAA/B,CAAoC,SAApC,EAA8C,CAAC,CAAD,EAAI,CAAJ,EAAOL,KAAP,EAAcC,MAAd,CAA9C,EAAqEI,IAArE,CAA0E,OAA1E,EAAkFL,KAAlF,EAAyFK,IAAzF,CAA8F,QAA9F,EAAuGJ,MAAvG,CAAZ;AAEA,QAAIK,OAAO,GAAGV,EAAE,CAACW,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,EAAD,EAAI,GAAJ,CAAxB,EAAkCC,KAAlC,CAAwC,CAAC,CAAD,EAAGR,MAAH,CAAxC,EAAoDS,IAApD,EAAd;;AACA,aAASC,UAAT,CAAoBC,CAApB,EAAuB;AACnB,YAAMC,CAAC,GAAG,CAACD,CAAC,GAAG,GAAL,EAAUE,OAAV,CAAkB,CAAlB,CAAV;AACA,aAAO,KAAKC,UAAL,CAAgBC,WAAhB,GAA+B,OAAMH,CAAE,EAAvC,GAA4C,IAAGA,CAAE,UAAxD;AACH;;AACD,QAAII,MAAM,GAAGrB,EAAE,CAACsB,SAAH,GAAeC,KAAf,CAAqBb,OAArB,EAA8Bc,KAA9B,CAAoC,EAApC,EAAwCC,QAAxC,CAAiDrB,KAAjD,EAAwDsB,UAAxD,CAAmEX,UAAnE,CAAb;AAMAT,IAAAA,GAAG,CAACqB,SAAJ,CAAc,QAAd,EAAwBC,IAAxB,CAA6BlB,OAAO,CAACc,KAAR,EAA7B,EACKK,IADL,CACU,MADV,EAEKpB,IAFL,CAEU,IAFV,EAEe,GAFf,EAGKA,IAHL,CAGU,IAHV,EAGe,GAHf,EAIKA,IAJL,CAIU,IAJV,EAIeO,CAAC,IAAEN,OAAO,CAACM,CAAD,CAJzB,EAKKP,IALL,CAKU,IALV,EAKeO,CAAC,IAAEN,OAAO,CAACM,CAAD,CALzB,EAMKP,IANL,CAMU,QANV,EAMmB,OANnB;AAOAH,IAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EACKrB,IADL,CACU,gBADV,EAC2B,GAD3B,EAEKA,IAFL,CAEU,kBAFV,EAE6B,KAF7B,EAGKA,IAHL,CAGU,WAHV,EAGsB,kBAHtB,EAG0CsB,IAH1C,CAG+CV,MAH/C;AAKH,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,sBAAO;AACH,IAAA,SAAS,EAAC,SADP;AAGH,IAAA,GAAG,EAAElB,WAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAKH","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from \"d3\";\n\n\n\n\n\n\n\n\nexport default function D3Test(props){\n    const d3Container = useRef(null);\n    useEffect(()=>{\n        const width = 300\n        const height = 300\n        const svg = d3.select(d3Container.current).attr(\"viewbox\",[0, 0, width, height]).attr(\"width\",width).attr(\"height\",height)\n\n        var y_scale = d3.scaleLinear().domain([10,100]).range([0,height]).nice()\n        function formatTick(d) {\n            const s = (d / 1e6).toFixed(1);\n            return this.parentNode.nextSibling ? `\\xa0${s}` : `$${s} million`;\n        }\n        var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width).tickFormat(formatTick)\n\n\n\n\n\n        svg.selectAll(\"circle\").data(y_scale.ticks())\n            .join(\"line\")\n            .attr(\"x1\",150)\n            .attr(\"x2\",250)\n            .attr(\"y1\",d=>y_scale(d))\n            .attr(\"y2\",d=>y_scale(d))\n            .attr(\"stroke\",\"black\")\n        svg.append(\"g\")\n            .attr(\"stroke-opacity\",0.5)\n            .attr(\"stroke-dasharray\",\"2,2\")\n            .attr(\"transform\",\"translate(50,10)\").call(y_axis)\n        \n    }, [])\n\n    return <svg\n        className=\"d3_test\"\n\n        ref={d3Container}\n    />\n}"]},"metadata":{},"sourceType":"module"}