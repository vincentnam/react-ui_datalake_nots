{"ast":null,"code":"var _jsxFileName = \"/app/src/components/d3component_testfield.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from \"d3\";\nexport default function D3Test(props) {\n  const d3Container = useRef(null);\n  useEffect(() => {\n    const width = 300;\n    const height = 300;\n    const svg = d3.select(d3Container.current).attr(\"viewbox\", [0, 0, width, height]).attr(\"width\", width).attr(\"height\", height);\n    var y_scale = d3.scaleLinear().domain([10, 100]).range([0, height]).nice();\n\n    function formatTick(d) {\n      const s = (d / 1e6).toFixed(1);\n      return this.parentNode.nextSibling ? `\\xa0${s}` : `$${s} million`;\n    }\n\n    var formatHours = g => {\n      const format = d3.utcFormat(\"%-I %p\");\n      return hours => format(new Date(hours * 1000 * 60 * 60));\n    };\n\n    var formatDay = d3.timeFormat(width < 500 ? \"%b\" : \"%B\"); // var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width).tickFormat(formatTick)\n\n    var y_axis = g => g.attr(\"transform\", `translate(0,0)`).call(d3.axisLeft(y_scale).ticks(24).tickFormat(formatHours).tickSize(-width).tickPadding(10)).call(g => g.selectAll(\".domain, .tick:first-of-type, .tick:last-of-type\").remove()).call(g => g.selectAll(\".tick line\").attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 0.5));\n\n    svg.selectAll(\"circle\").data(y_scale.ticks()).join(\"line\").attr(\"x1\", 150).attr(\"x2\", 250).attr(\"y1\", d => y_scale(d)).attr(\"y2\", d => y_scale(d)).attr(\"stroke\", \"black\");\n    svg.append(\"g\").attr(\"transform\", \"translate(50,10)\").call(y_axis);\n    console.log(y_axis.ticks());\n  }, []);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"d3_test\",\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["/app/src/components/d3component_testfield.js"],"names":["React","useEffect","useRef","useState","d3","D3Test","props","d3Container","width","height","svg","select","current","attr","y_scale","scaleLinear","domain","range","nice","formatTick","d","s","toFixed","parentNode","nextSibling","formatHours","g","format","utcFormat","hours","Date","formatDay","timeFormat","y_axis","call","axisLeft","ticks","tickFormat","tickSize","tickPadding","selectAll","remove","data","join","append","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from \"d3\";\n\n\n\n\n\n\n\n\nexport default function D3Test(props){\n    const d3Container = useRef(null);\n    useEffect(()=>{\n        const width = 300\n        const height = 300\n        const svg = d3.select(d3Container.current).attr(\"viewbox\",[0, 0, width, height]).attr(\"width\",width).attr(\"height\",height)\n\n        var y_scale = d3.scaleLinear().domain([10,100]).range([0,height]).nice()\n        function formatTick(d) {\n            const s = (d / 1e6).toFixed(1);\n            return this.parentNode.nextSibling ? `\\xa0${s}` : `$${s} million`;\n        }\n        var formatHours = g => {\n            const format = d3.utcFormat(\"%-I %p\");\n            return hours => format(new Date(hours* 1000*60 *60))\n        }\n        var formatDay = d3.timeFormat(width < 500 ? \"%b\" : \"%B\")\n        // var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width).tickFormat(formatTick)\n        var y_axis = g => g\n            .attr(\"transform\", `translate(0,0)`)\n            .call(d3.axisLeft(y_scale)\n                .ticks(24)\n                .tickFormat(formatHours)\n                .tickSize(-width)\n                .tickPadding(10))\n            .call(g => g.selectAll(\".domain, .tick:first-of-type, .tick:last-of-type\").remove())\n            .call(g => g.selectAll(\".tick line\").attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 0.5));\n\n\n\n\n        svg.selectAll(\"circle\").data(y_scale.ticks())\n            .join(\"line\")\n            .attr(\"x1\",150)\n            .attr(\"x2\",250)\n            .attr(\"y1\",d=>y_scale(d))\n            .attr(\"y2\",d=>y_scale(d))\n            .attr(\"stroke\",\"black\")\n        svg.append(\"g\").attr(\"transform\",\"translate(50,10)\").call(y_axis)\n        console.log(y_axis.ticks())\n    }, [])\n\n    return <svg\n        className=\"d3_test\"\n\n        ref={d3Container}\n    />\n}"]},"metadata":{},"sourceType":"module"}