{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Testfield.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport DropZoneCard from \"./DropZoneCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormControl, NavDropdown, Button, Nav, Navbar, Form, Container, Row, Col } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\nexport default function Dashboard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  var componentConfig = {\n    postUrl: 'no-url'\n  };\n  var djsConfig = {\n    autoProcessQueue: true,\n    dictDefaultMessage: \"Déposez un fichier à téléverser - Drop file to upload it\",\n    addRemoveLinks: true,\n    multiple: true\n  };\n  var eventHandlers = {\n    addedfile: file => console.log(file)\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/app/src/components/Testfield.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","DropZoneCard","Grid","FormControl","NavDropdown","Button","Nav","Navbar","Form","Container","Row","Col","drawerWidth","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Dashboard","classes","open","setOpen","useState","componentConfig","postUrl","djsConfig","autoProcessQueue","dictDefaultMessage","addRemoveLinks","multiple","eventHandlers","addedfile","file","console","log","handleDrawerOpen","handleDrawerClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport DropZoneCard from \"./DropZoneCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {FormControl, NavDropdown, Button, Nav, Navbar, Form, Container, Row, Col} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    var componentConfig = { postUrl: 'no-url' };\n    var djsConfig = { autoProcessQueue: true,\n        dictDefaultMessage: \"Déposez un fichier à téléverser - Drop file to upload it\",\n        addRemoveLinks:true, multiple: true }\n    var eventHandlers = { addedfile: (file) => console.log(file) }\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div></div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}