{"ast":null,"code":"var _jsxFileName = \"/app/src/components/DropZoneCard.js\";\nimport React, { createRef, useCallback, useState } from \"react\";\nimport { Button, Card, Grid } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ListGroup } from \"react-bootstrap\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport { View } from \"react-native-web\";\nimport axios, { post } from 'axios';\nimport warnAboutDeprecatedESMImport from \"react-router-dom/es/warnAboutDeprecatedESMImport\";\nconst api_rest = \"http://127.0.0.1:5000\";\nconst swift_url = \"http://141.115.103.30:8080\";\nconst upload_file_url = \"/upload_file\";\nconst auth_url = \"/auth/v1.0\";\nconst user = \"test:tester\";\nconst password = \"testing\";\n\nfunction upload_file(file) {\n  //https://bezkoder.com/react-file-upload-axios/\n  const formData = new FormData(); // const SwiftClient = require(\"openstack-swift-client\");\n  // let client = new SwiftClient(new SwiftClient.SwiftAuthenticator(swift_url + auth_url, user,password));\n  //\n\n  formData.append('file', file); // return client.list();\n\n  return axios.post(api_rest + upload_file_url, data = formData, {}); // var myHeaders = new Headers({\n  //     \"X-Storage-User\": user,\n  //     \"X-Storage-Pass\": password,\n  //     \"Access-Control-Allow-Origin\": \"*\"\n  // });\n  // var myInit = {\n  //     method: \"GET\",\n  //     headers: myHeaders\n  // }\n  // // const config = {\n  // //     // headers: {\n  // //     //     'content-type': 'multipart/form-data'\n  // //     // }\n  // //     headers: {'Content-Type':'application/x-www-form-urlencoded'}\n  // // }\n  // return  axios.get(api_rest+auth_url,{headers:{\n  //             \"X-Storage-User\": user,\n  //             \"X-Storage-Pass\": password,\n  //             \"Access-Control-Allow-Origin\": \"*\"\n  //     }\n  // }\n  //     ).then(function (response) {\n  //     console.log(response)\n  //     return response.blob()\n  // } ).then(function (blob){\n  //     var objectURL = URL.createObjectURL(blob)\n  //     console.log(objectURL)\n  // })\n  // return post(api_rest + upload_file_url, formData, config)\n}\n\nexport default function DropZoneCard(props) {\n  function send_click(e) {\n    files.forEach(file => console.log(file));\n    files.forEach(file => upload_file(file).then(response => console.log(response)));\n  }\n\n  const [files, setFiles] = useState([]);\n  const dropzoneRef = createRef();\n\n  const openDialog = () => {\n    // Note that the ref is set async,\n    // so it might be null at some point\n    if (dropzoneRef.current) {\n      dropzoneRef.current.open();\n    }\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      files.push(file);\n      setFiles(files);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    ref: dropzoneRef,\n    onDrop: onDrop,\n    noClick: true,\n    noKeyboard: true,\n    addRemoveLink: true,\n    on: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    acceptedFiles\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n      className: 'dropzone'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, \"Glisser-d\\xE9poser un fichier dans cette zone\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: openDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, \"Choisir un fichier\"))), /*#__PURE__*/React.createElement(View, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"aside\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, \"Files\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, files.map(file => /*#__PURE__*/React.createElement(\"li\", {\n      key: file.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, file.path, \" - \", file.size, \" bytes\"))))));\n  }), /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: send_click,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      backgroundColor: \"#F16E10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"T\\xE9leverser - Upload\")));\n} //\n// export class DropZoneCard extends React.Component {\n//\n//\n//     getDropZoneHandler(event){\n//\n//     }\n//     constructor (props) {\n//         super(props)\n//\n//         this.state = { files: [] }\n//     }\n//     render() {\n//\n//\n//\n//     }\n//\n// }\n// export default DropZoneCard","map":{"version":3,"sources":["/app/src/components/DropZoneCard.js"],"names":["React","createRef","useCallback","useState","Button","Card","Grid","makeStyles","ListGroup","Dropzone","useDropzone","View","axios","post","warnAboutDeprecatedESMImport","api_rest","swift_url","upload_file_url","auth_url","user","password","upload_file","file","formData","FormData","append","data","DropZoneCard","props","send_click","e","files","forEach","console","log","then","response","setFiles","dropzoneRef","openDialog","current","open","onDrop","acceptedFiles","push","getRootProps","getInputProps","textAlign","className","map","path","size","backgroundColor"],"mappings":"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","sourcesContent":["import React, {createRef, useCallback, useState} from \"react\";\n\nimport {Button, Card, Grid} from \"@material-ui/core\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {ListGroup} from \"react-bootstrap\";\nimport Dropzone, {useDropzone} from \"react-dropzone\";\nimport {View} from \"react-native-web\";\nimport axios, { post } from 'axios';\nimport warnAboutDeprecatedESMImport from \"react-router-dom/es/warnAboutDeprecatedESMImport\";\n\n\nconst api_rest = \"http://127.0.0.1:5000\"\nconst swift_url = \"http://141.115.103.30:8080\"\nconst upload_file_url=\"/upload_file\"\nconst auth_url = \"/auth/v1.0\"\nconst user = \"test:tester\"\nconst password = \"testing\"\nfunction upload_file(file){\n    //https://bezkoder.com/react-file-upload-axios/\n    const formData = new FormData();\n    // const SwiftClient = require(\"openstack-swift-client\");\n    // let client = new SwiftClient(new SwiftClient.SwiftAuthenticator(swift_url + auth_url, user,password));\n    //\n    formData.append('file',file);\n    // return client.list();\n    return axios.post(api_rest+upload_file_url,data=formData, {})\n    // var myHeaders = new Headers({\n    //     \"X-Storage-User\": user,\n    //     \"X-Storage-Pass\": password,\n    //     \"Access-Control-Allow-Origin\": \"*\"\n    // });\n    // var myInit = {\n    //     method: \"GET\",\n    //     headers: myHeaders\n    // }\n    // // const config = {\n    // //     // headers: {\n    // //     //     'content-type': 'multipart/form-data'\n    // //     // }\n    // //     headers: {'Content-Type':'application/x-www-form-urlencoded'}\n    // // }\n    // return  axios.get(api_rest+auth_url,{headers:{\n    //             \"X-Storage-User\": user,\n    //             \"X-Storage-Pass\": password,\n    //             \"Access-Control-Allow-Origin\": \"*\"\n    //     }\n    // }\n    //     ).then(function (response) {\n    //     console.log(response)\n    //     return response.blob()\n    // } ).then(function (blob){\n    //     var objectURL = URL.createObjectURL(blob)\n    //     console.log(objectURL)\n    // })\n    // return post(api_rest + upload_file_url, formData, config)\n\n}\nexport default function DropZoneCard (props){\n\n    function send_click(e){\n\n\n        files.forEach(file => console.log(file))\n        files.forEach(file => upload_file(file).then(response => console.log(response)))\n    }\n    const [files, setFiles] = useState([]);\n    const dropzoneRef = createRef();\n    const openDialog = () => {\n        // Note that the ref is set async,\n        // so it might be null at some point\n        if (dropzoneRef.current) {\n            dropzoneRef.current.open()\n        }\n    };\n\n    const onDrop = useCallback((acceptedFiles) => {\n        acceptedFiles.forEach((file) => {\n            files.push(file)\n            setFiles(files)\n        })\n\n    }, [])\n    const {getRootProps, getInputProps} = useDropzone({onDrop})\n\n    return <Card>\n        {/*<DropzoneComponent ref=\"dropzone\" config={props.config}*/}\n        {/*                   eventHandlers={props.eventHandlers}*/}\n        {/*                   djsConfig={props.djsConfig}*/}\n        {/*                   onChange={setdropFiles}*/}\n        {/*/>*/}\n\n\n        {/*<Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>*/}\n        {/*    {({getRootProps, getInputProps}) => (*/}\n        {/*        <section>*/}\n        {/*            <div {...getRootProps()}>*/}\n        {/*                <input {...getInputProps()} />*/}\n        {/*                <p>Drag 'n' drop some files here, or click to select files</p>*/}\n        {/*            </div>*/}\n        {/*        </section>*/}\n        {/*    )}*/}\n        {/*</Dropzone>*/}\n        <Dropzone  ref={dropzoneRef} onDrop={onDrop} noClick noKeyboard addRemoveLink={true} on>\n            {({getRootProps, getInputProps, acceptedFiles}) => {\n                return (\n                    <div className=\"container\">\n                        <View style={{ textAlign:'center'}}>\n                            <div  {...getRootProps({className: 'dropzone'})} >\n                                <input {...getInputProps()} />\n                                <p >Glisser-déposer un fichier dans cette zone</p>\n                                <button\n                                    type=\"button\"\n                                    onClick={openDialog}\n                                >\n                                    Choisir un fichier\n                                </button>\n                            </div>\n                        </View>\n                        <View style={{ textAlign:'center'}}>\n                            <aside>\n                                <h4>Files</h4>\n                                <ul>\n                                    {files.map(file => (\n                                        <li key={file.path}>\n                                            {file.path} - {file.size} bytes\n                                        </li>\n                                    ))}\n                                </ul>\n                            </aside>\n                        </View>\n                    </div>\n                );\n            }}\n        </Dropzone>\n        <View >\n            <Button onClick={send_click} variant=\"contained\" color=\"primary\" style={{backgroundColor:\"#F16E10\"}}>\n                Téleverser - Upload\n            </Button>\n        </View>\n    </Card>\n}\n//\n// export class DropZoneCard extends React.Component {\n//\n//\n//     getDropZoneHandler(event){\n//\n//     }\n//     constructor (props) {\n//         super(props)\n//\n//         this.state = { files: [] }\n//     }\n//     render() {\n//\n//\n//\n//     }\n//\n// }\n\n// export default DropZoneCard"]},"metadata":{},"sourceType":"module"}