{"ast":null,"code":"var _jsxFileName = \"/app/src/components/d3component_testfield.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from \"d3\";\nimport * as axios from \"axios\";\nimport log from \"d3-scale/src/log\";\nexport default function D3Test(props) {\n  const d3Container = useRef(null);\n  const width = 900;\n  const height = 300;\n  const marging = {\n    top: 10,\n    left: 30,\n    right: 10,\n    bottom: 20\n  };\n  console.log(width + marging.top);\n  const svg_width = width + marging.left + marging.right;\n  const svg_height = height + marging.bottom + marging.top;\n  useEffect(() => {\n    async function get_data() {\n      var data = await axios.get(\"http://localhost:5000/sensors_data\").then(response => response.data);\n      var values = [];\n      var values_list = [];\n      var date = [];\n      var size = 0; // console.log(data)\n\n      for (var device in data) {\n        // console.log(device)\n        for (var uri in data[device]) {\n          // console.log(uri)\n          values.push({\n            id: uri,\n            values: []\n          });\n\n          for (var sample in data[device][uri]) {\n            values[0][\"values\"].append({\n              value: data[device][uri][sample][0],\n              value_unit: data[device][uri][sample][1],\n              date: new Date(data[device][uri][sample][2])\n            });\n            size = values.push(data[device][uri][sample]);\n            values_list.push(data[device][uri][sample][0]);\n            date.push(data[device][uri][sample][2]);\n          }\n        }\n      } //\n      //             for (var device in data){\n      //     // console.log(device)\n      //     for (var uri in data[device]){\n      //         // console.log(uri)\n      //         for (var sample in data[device][uri]){\n      //             // console.log(sample)\n      //             // console.log(data[device][uri][sample])\n      //             size = values.push(data[device][uri][sample])\n      //             values_list.push(data[device][uri][sample][0])\n      //             date.push(data[device][uri][sample][2])\n      //         }\n      //     }\n      // }\n\n\n      var date_extr = d3.extent(date);\n      var date_deb = new Date(date_extr[0] * 1000);\n      var date_fin = new Date(date_extr[1] * 1000);\n      var val_extr = d3.extent(values_list); // var val_min = val_extr[0]\n      // var val_max = val_extr[1]\n      // console.log(val_extr)\n\n      const svg = d3.select(d3Container.current).attr(\"viewbox\", [0, 0, width - (marging.right + marging.left), height - (marging.bottom + marging.top)]).attr(\"width\", width).attr(\"height\", height);\n      var y_scale = d3.scaleLinear().domain(val_extr).nice().range([marging[\"top\"], height - (marging.bottom + marging.top)]);\n      var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width);\n      var x_scale = d3.scaleTime().domain([date_deb, date_fin]).nice().range([marging[\"left\"], width - marging[\"right\"]]);\n      var x_axis = d3.axisBottom().scale(x_scale); // svg.selectAll(\"circle\").data(y_scale.ticks())\n      //     .join(\"line\")\n      //     .attr(\"x1\",150)\n      //     .attr(\"x2\",250)\n      //     .attr(\"y1\",d=>y_scale(d))\n      //     .attr(\"y2\",d=>y_scale(d))\n      //     .attr(\"stroke\",\"black\")\n\n      svg.append(\"g\").attr(\"class\", \"y_axis\").attr(\"stroke-opacity\", 0.5).attr(\"stroke-dasharray\", \"2,2\").attr(\"transform\", `translate(${marging.left},${marging.top})`).call(y_axis);\n      svg.append(\"g\").attr(\"transform\", `translate(${marging.left},${height - marging.bottom})`).attr(\"class\", \"x_axis\").call(x_axis);\n      svg.selectAll(\".tick text\").attr(\"x\", 4).attr(\"dy\", -4);\n      svg.selectAll(\".y_axis .tick text\").attr(\"transform\", `translate(-25,10)`);\n      svg.selectAll(\".x_axis .tick text\").attr(\"transform\", `translate(0,10)`); // console.log(dict_data)\n\n      const line = d3.line().x(function (d) {\n        return x_scale(d.date);\n      }).y(function (d) {\n        return y_scale(d.value);\n      }); // const lines = svg.selectAll(\"lines\").data(dict_data).enter().append(\"g\")\n      // lines.append(\"path\").attr(\"d\",function(d){return line(d.values)})\n    }\n\n    get_data();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: svg_width,\n    height: svg_height,\n    className: \"d3_test\",\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["/app/src/components/d3component_testfield.js"],"names":["React","useEffect","useRef","useState","d3","axios","log","D3Test","props","d3Container","width","height","marging","top","left","right","bottom","console","svg_width","svg_height","get_data","data","get","then","response","values","values_list","date","size","device","uri","push","id","sample","append","value","value_unit","Date","date_extr","extent","date_deb","date_fin","val_extr","svg","select","current","attr","y_scale","scaleLinear","domain","nice","range","y_axis","axisRight","scale","ticks","tickSize","x_scale","scaleTime","x_axis","axisBottom","call","selectAll","line","x","d","y"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from \"d3\";\nimport * as axios from \"axios\";\nimport log from \"d3-scale/src/log\";\n\n\n\n\n\n\n\nexport default function D3Test(props){\n    const d3Container = useRef(null);\n\n    const width = 900\n    const height = 300\n    const marging = {top:10, left:30, right:10,bottom:20}\n    console.log(width + marging.top)\n    const svg_width = width + marging.left + marging.right\n    const svg_height = height + marging.bottom + marging.top\n\n    useEffect(()=>{\n        async function get_data() {\n            var data = await axios.get(\"http://localhost:5000/sensors_data\").then(response => response.data)\n\n\n\n\n            var values = []\n            var values_list = []\n            var date = []\n            var size = 0\n\n            // console.log(data)\n            for (var device in data) {\n                // console.log(device)\n                for (var uri in data[device]) {\n                    // console.log(uri)\n                    values.push({id:uri, values:[]})\n                    for (var sample in data[device][uri]) {\n                        values[0][\"values\"].append({\n\n                            value :data[device][uri][sample][0],\n                            value_unit : data[device][uri][sample][1],\n                            date: new Date(data[device][uri][sample][2])\n\n                        })\n                        size = values.push(data[device][uri][sample])\n                        values_list.push(data[device][uri][sample][0])\n                        date.push(data[device][uri][sample][2])\n\n                    }\n                }\n            }\n            //\n            //             for (var device in data){\n            //     // console.log(device)\n            //     for (var uri in data[device]){\n            //         // console.log(uri)\n            //         for (var sample in data[device][uri]){\n            //             // console.log(sample)\n            //             // console.log(data[device][uri][sample])\n            //             size = values.push(data[device][uri][sample])\n            //             values_list.push(data[device][uri][sample][0])\n            //             date.push(data[device][uri][sample][2])\n            //         }\n            //     }\n            // }\n\n            var date_extr = d3.extent(date)\n            var date_deb = new Date(date_extr[0]*1000)\n            var date_fin = new Date(date_extr[1]*1000)\n            var val_extr = d3.extent(values_list)\n            // var val_min = val_extr[0]\n            // var val_max = val_extr[1]\n            // console.log(val_extr)\n            const svg = d3.select(d3Container.current).attr(\"viewbox\",[0, 0, width- (marging.right + marging.left), height-(marging.bottom + marging.top)]).attr(\"width\",width).attr(\"height\",height)\n\n            var y_scale = d3.scaleLinear().domain(val_extr).nice().range([marging[\"top\"],height-(marging.bottom + marging.top)])\n\n            var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width)\n\n            var x_scale = d3.scaleTime().domain([date_deb,date_fin]).nice().range([marging[\"left\"], width-marging[\"right\"]])\n\n            var x_axis = d3.axisBottom().scale(x_scale)\n\n            // svg.selectAll(\"circle\").data(y_scale.ticks())\n            //     .join(\"line\")\n            //     .attr(\"x1\",150)\n            //     .attr(\"x2\",250)\n            //     .attr(\"y1\",d=>y_scale(d))\n            //     .attr(\"y2\",d=>y_scale(d))\n            //     .attr(\"stroke\",\"black\")\n\n            svg.append(\"g\")\n                .attr(\"class\",\"y_axis\")\n                .attr(\"stroke-opacity\",0.5)\n                .attr(\"stroke-dasharray\",\"2,2\")\n                .attr(\"transform\",`translate(${marging.left},${marging.top})`).call(y_axis)\n            svg.append(\"g\")\n                .attr(\"transform\", `translate(${marging.left},${height - marging.bottom})`)\n                .attr(\"class\",\"x_axis\")\n                .call(x_axis)\n            svg.selectAll(\".tick text\")\n                .attr(\"x\", 4).attr(\"dy\", -4);\n            svg.selectAll(\".y_axis .tick text\").attr(\"transform\",`translate(-25,10)`)\n            svg.selectAll(\".x_axis .tick text\").attr(\"transform\",`translate(0,10)`)\n\n            // console.log(dict_data)\n            const line = d3.line().x(function (d){return x_scale(d.date)}).y(function (d){return y_scale(d.value)})\n\n            // const lines = svg.selectAll(\"lines\").data(dict_data).enter().append(\"g\")\n            // lines.append(\"path\").attr(\"d\",function(d){return line(d.values)})\n\n        }\n        get_data()\n    }, [])\n\n    return <svg width={svg_width} height={svg_height}\n        className=\"d3_test\"\n\n        ref={d3Container}\n    />\n}"]},"metadata":{},"sourceType":"module"}