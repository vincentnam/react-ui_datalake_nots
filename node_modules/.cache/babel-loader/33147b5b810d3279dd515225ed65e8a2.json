{"ast":null,"code":"var _jsxFileName = \"/app/src/components/d3component_testfield.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from \"d3\";\nimport * as axios from \"axios\";\nexport default function D3Test(props) {\n  const d3Container = useRef(null);\n  const width = 900;\n  const height = 300;\n  const marging = {\n    top: 10,\n    left: 30,\n    right: 10,\n    bottom: 20\n  };\n  console.log(width + marging.top);\n  const svg_width = width + marging.left + marging.right;\n  const svg_height = height + marging.bottom + marging.top;\n  useEffect(() => {\n    async function get_data() {\n      var data = await axios.get(\"http://localhost:5000/sensors_data\").then(response => response.data);\n      var values = [];\n      var value_units = [];\n      var date = [];\n      var size = 0;\n\n      for (var device in data) {\n        // console.log(device)\n        for (var uri in data[device]) {\n          // console.log(uri)\n          for (var sample in data[device][uri]) {\n            // console.log(sample)\n            // console.log(data[device][uri][sample])\n            size = values.push(data[device][uri][sample][0]);\n            value_units.push(data[device][uri][sample][1]);\n            date.push(data[device][uri][sample][2]);\n          }\n        }\n      }\n\n      var date_extr = d3.extent(date);\n      var date_deb = new Date(date_extr[0] * 1000);\n      var date_fin = new Date(date_extr[1] * 1000);\n      console.log(date_deb, date_fin);\n      const svg = d3.select(d3Container.current).attr(\"viewbox\", [0, 0, width - (marging.right + marging.left), height - (marging.bottom + marging.top)]).attr(\"width\", width).attr(\"height\", height);\n      var y_scale = d3.scaleLinear().domain([10, 100]).range([marging[\"top\"], height - (marging.bottom + marging.top)]).nice();\n      var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width);\n      var x_scale = d3.scaleTime().domain([date_deb, date_fin]).nice().range([marging[\"left\"], width - marging[\"right\"]]);\n      var x_axis = d3.axisBottom().scale(x_scale); // svg.selectAll(\"circle\").data(y_scale.ticks())\n      //     .join(\"line\")\n      //     .attr(\"x1\",150)\n      //     .attr(\"x2\",250)\n      //     .attr(\"y1\",d=>y_scale(d))\n      //     .attr(\"y2\",d=>y_scale(d))\n      //     .attr(\"stroke\",\"black\")\n\n      svg.append(\"g\").attr(\"class\", \"y_axis\").attr(\"stroke-opacity\", 0.5).attr(\"stroke-dasharray\", \"2,2\").attr(\"transform\", `translate(${marging.left},${marging.top})`).call(y_axis);\n      svg.append(\"g\").attr(\"transform\", `translate(${marging.left},${height - marging.bottom})`).attr(\"class\", \"x_axis\").call(x_axis);\n      svg.selectAll(\".tick text\").attr(\"x\", 4).attr(\"dy\", -4);\n      svg.selectAll(\".y_axis .tick text\").attr(\"transform\", `translate(-25,10)`);\n      svg.selectAll(\".x_axis .tick text\").attr(\"transform\", `translate(0,10)`);\n      svg.selectAll(\"circle\").data(data).join(\"circle\").attr(\"x\", d => x_scale(d[2]));\n    }\n\n    get_data();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: svg_width,\n    height: svg_height,\n    className: \"d3_test\",\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["/app/src/components/d3component_testfield.js"],"names":["React","useEffect","useRef","useState","d3","axios","D3Test","props","d3Container","width","height","marging","top","left","right","bottom","console","log","svg_width","svg_height","get_data","data","get","then","response","values","value_units","date","size","device","uri","sample","push","date_extr","extent","date_deb","Date","date_fin","svg","select","current","attr","y_scale","scaleLinear","domain","range","nice","y_axis","axisRight","scale","ticks","tickSize","x_scale","scaleTime","x_axis","axisBottom","append","call","selectAll","join","d"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from \"d3\";\nimport * as axios from \"axios\";\n\n\n\n\n\n\n\nexport default function D3Test(props){\n    const d3Container = useRef(null);\n\n    const width = 900\n    const height = 300\n    const marging = {top:10, left:30, right:10,bottom:20}\n    console.log(width + marging.top)\n    const svg_width = width + marging.left + marging.right\n    const svg_height = height + marging.bottom + marging.top\n\n    useEffect(()=>{\n        async function get_data() {\n            var data = await axios.get(\"http://localhost:5000/sensors_data\").then(response => response.data)\n\n\n\n\n            var values = []\n            var value_units = []\n            var date = []\n            var size = 0\n            for (var device in data){\n                // console.log(device)\n                for (var uri in data[device]){\n                    // console.log(uri)\n                    for (var sample in data[device][uri]){\n                        // console.log(sample)\n                        // console.log(data[device][uri][sample])\n                        size = values.push(data[device][uri][sample][0])\n                        value_units.push(data[device][uri][sample][1])\n                        date.push(data[device][uri][sample][2])\n                    }\n                }\n            }\n\n            var date_extr = d3.extent(date)\n            var date_deb = new Date(date_extr[0]*1000)\n            var date_fin = new Date(date_extr[1]*1000)\n            console.log(date_deb, date_fin)\n            const svg = d3.select(d3Container.current).attr(\"viewbox\",[0, 0, width- (marging.right + marging.left), height-(marging.bottom + marging.top)]).attr(\"width\",width).attr(\"height\",height)\n\n            var y_scale = d3.scaleLinear().domain([10,100]).range([marging[\"top\"],height-(marging.bottom + marging.top)]).nice()\n\n            var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width)\n\n            var x_scale = d3.scaleTime().domain([date_deb,date_fin]).nice().range([marging[\"left\"], width-marging[\"right\"]])\n\n            var x_axis = d3.axisBottom().scale(x_scale)\n\n            // svg.selectAll(\"circle\").data(y_scale.ticks())\n            //     .join(\"line\")\n            //     .attr(\"x1\",150)\n            //     .attr(\"x2\",250)\n            //     .attr(\"y1\",d=>y_scale(d))\n            //     .attr(\"y2\",d=>y_scale(d))\n            //     .attr(\"stroke\",\"black\")\n\n            svg.append(\"g\")\n                .attr(\"class\",\"y_axis\")\n                .attr(\"stroke-opacity\",0.5)\n                .attr(\"stroke-dasharray\",\"2,2\")\n                .attr(\"transform\",`translate(${marging.left},${marging.top})`).call(y_axis)\n            svg.append(\"g\")\n                .attr(\"transform\", `translate(${marging.left},${height - marging.bottom})`)\n                .attr(\"class\",\"x_axis\")\n                .call(x_axis)\n            svg.selectAll(\".tick text\")\n                .attr(\"x\", 4).attr(\"dy\", -4);\n            svg.selectAll(\".y_axis .tick text\").attr(\"transform\",`translate(-25,10)`)\n            svg.selectAll(\".x_axis .tick text\").attr(\"transform\",`translate(0,10)`)\n            svg.selectAll(\"circle\").data(data).join(\"circle\").attr(\"x\",d => x_scale(d[2]))\n        }\n        get_data()\n    }, [])\n\n    return <svg width={svg_width} height={svg_height}\n        className=\"d3_test\"\n\n        ref={d3Container}\n    />\n}"]},"metadata":{},"sourceType":"module"}