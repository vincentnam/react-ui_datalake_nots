{"ast":null,"code":"var _jsxFileName = \"/app/src/components/d3component_testfield.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from \"d3\";\nexport default function D3Test(props) {\n  const d3Container = useRef(null);\n  useEffect(() => {\n    const width = 300;\n    const height = 300;\n    const svg = d3.select(d3Container.current).attr(\"viewbox\", [0, 0, width, height]).attr(\"width\", width).attr(\"height\", height);\n    var y_scale = d3.scaleLinear().domain([10, 100]).range([0, height]); // var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width)\n\n    var y_axis = d3.axisRight().scale(y_scale).attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisRight(y_scale).tickSize(width).tickFormat(formatTick)).call(g => g.select(\".domain\").remove()).call(g => g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke-opacity\", 0.5).attr(\"stroke-dasharray\", \"2,2\")).call(g => g.selectAll(\".tick text\").attr(\"x\", 4).attr(\"dy\", -4));\n    svg.selectAll(\"circle\").data(y_scale.ticks()).join(\"line\").attr(\"x1\", 150).attr(\"x2\", 250).attr(\"y1\", d => y_scale(d)).attr(\"y2\", d => y_scale(d)).attr(\"stroke\", \"black\");\n    svg.append(\"g\").attr(\"transform\", \"translate(50,10)\").call(y_axis);\n    console.log(y_axis.ticks());\n  }, []);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"d3_test\",\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["/app/src/components/d3component_testfield.js"],"names":["React","useEffect","useRef","useState","d3","D3Test","props","d3Container","width","height","svg","select","current","attr","y_scale","scaleLinear","domain","range","y_axis","axisRight","scale","margin","left","call","tickSize","tickFormat","formatTick","g","remove","selectAll","data","ticks","join","d","append","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AASA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AACjC,QAAMC,WAAW,GAAGL,MAAM,CAAC,IAAD,CAA1B;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMO,KAAK,GAAG,GAAd;AACA,UAAMC,MAAM,GAAG,GAAf;AACA,UAAMC,GAAG,GAAGN,EAAE,CAACO,MAAH,CAAUJ,WAAW,CAACK,OAAtB,EAA+BC,IAA/B,CAAoC,SAApC,EAA8C,CAAC,CAAD,EAAI,CAAJ,EAAOL,KAAP,EAAcC,MAAd,CAA9C,EAAqEI,IAArE,CAA0E,OAA1E,EAAkFL,KAAlF,EAAyFK,IAAzF,CAA8F,QAA9F,EAAuGJ,MAAvG,CAAZ;AAEA,QAAIK,OAAO,GAAGV,EAAE,CAACW,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,EAAD,EAAI,GAAJ,CAAxB,EAAkCC,KAAlC,CAAwC,CAAC,CAAD,EAAGR,MAAH,CAAxC,CAAd,CALU,CAOV;;AACA,QAAIS,MAAM,GAAGd,EAAE,CAACe,SAAH,GAAeC,KAAf,CAAqBN,OAArB,EACRD,IADQ,CACH,WADG,EACW,aAAYQ,MAAM,CAACC,IAAK,KADnC,EAERC,IAFQ,CAEHnB,EAAE,CAACe,SAAH,CAAaL,OAAb,EACDU,QADC,CACQhB,KADR,EAEDiB,UAFC,CAEUC,UAFV,CAFG,EAKRH,IALQ,CAKHI,CAAC,IAAIA,CAAC,CAAChB,MAAF,CAAS,SAAT,EACNiB,MADM,EALF,EAORL,IAPQ,CAOHI,CAAC,IAAIA,CAAC,CAACE,SAAF,CAAY,gCAAZ,EACNhB,IADM,CACD,gBADC,EACiB,GADjB,EAENA,IAFM,CAED,kBAFC,EAEmB,KAFnB,CAPF,EAURU,IAVQ,CAUHI,CAAC,IAAIA,CAAC,CAACE,SAAF,CAAY,YAAZ,EACNhB,IADM,CACD,GADC,EACI,CADJ,EAENA,IAFM,CAED,IAFC,EAEK,CAAC,CAFN,CAVF,CAAb;AAgBAH,IAAAA,GAAG,CAACmB,SAAJ,CAAc,QAAd,EAAwBC,IAAxB,CAA6BhB,OAAO,CAACiB,KAAR,EAA7B,EACKC,IADL,CACU,MADV,EAEKnB,IAFL,CAEU,IAFV,EAEe,GAFf,EAGKA,IAHL,CAGU,IAHV,EAGe,GAHf,EAIKA,IAJL,CAIU,IAJV,EAIeoB,CAAC,IAAEnB,OAAO,CAACmB,CAAD,CAJzB,EAKKpB,IALL,CAKU,IALV,EAKeoB,CAAC,IAAEnB,OAAO,CAACmB,CAAD,CALzB,EAMKpB,IANL,CAMU,QANV,EAMmB,OANnB;AAOAH,IAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqB,WAArB,EAAiC,kBAAjC,EAAqDU,IAArD,CAA0DL,MAA1D;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAM,CAACa,KAAP,EAAZ;AACH,GAjCQ,EAiCN,EAjCM,CAAT;AAmCA,sBAAO;AACH,IAAA,SAAS,EAAC,SADP;AAGH,IAAA,GAAG,EAAExB,WAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAKH","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from \"d3\";\n\n\n\n\n\n\n\n\nexport default function D3Test(props){\n    const d3Container = useRef(null);\n    useEffect(()=>{\n        const width = 300\n        const height = 300\n        const svg = d3.select(d3Container.current).attr(\"viewbox\",[0, 0, width, height]).attr(\"width\",width).attr(\"height\",height)\n\n        var y_scale = d3.scaleLinear().domain([10,100]).range([0,height])\n\n        // var y_axis = d3.axisRight().scale(y_scale).ticks(15).tickSize(width)\n        var y_axis = d3.axisRight().scale(y_scale)\n            .attr(\"transform\", `translate(${margin.left},0)`)\n            .call(d3.axisRight(y_scale)\n                .tickSize(width )\n                .tickFormat(formatTick))\n            .call(g => g.select(\".domain\")\n                .remove())\n            .call(g => g.selectAll(\".tick:not(:first-of-type) line\")\n                .attr(\"stroke-opacity\", 0.5)\n                .attr(\"stroke-dasharray\", \"2,2\"))\n            .call(g => g.selectAll(\".tick text\")\n                .attr(\"x\", 4)\n                .attr(\"dy\", -4))\n\n\n\n        svg.selectAll(\"circle\").data(y_scale.ticks())\n            .join(\"line\")\n            .attr(\"x1\",150)\n            .attr(\"x2\",250)\n            .attr(\"y1\",d=>y_scale(d))\n            .attr(\"y2\",d=>y_scale(d))\n            .attr(\"stroke\",\"black\")\n        svg.append(\"g\").attr(\"transform\",\"translate(50,10)\").call(y_axis)\n        console.log(y_axis.ticks())\n    }, [])\n\n    return <svg\n        className=\"d3_test\"\n\n        ref={d3Container}\n    />\n}"]},"metadata":{},"sourceType":"module"}